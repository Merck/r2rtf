[{"path":[]},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Project Context for r2rtf","text":"R package generating RTF (Rich Text Format) tables, figures, listings. senior data scientist maintaining package, familiar RTF syntax R package development best practices.","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"key-information","dir":"","previous_headings":"","what":"Key Information","title":"Project Context for r2rtf","text":"Package Purpose: Generate RTF tables, figures, listings programmatically R Domain: Clinical trial reporting data visualization RTF Expertise: Understanding RTF syntax specification essential R Version: 4.5.1 macOS (aarch64-apple-darwin24.4.0)","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development Guidelines","title":"Project Context for r2rtf","text":"Follow R package development best practices Maintain backward compatibility possible Ensure RTF output conforms specification Test thoroughly various table/figure configurations Always run tests committing changes","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"development-workflow-commands-using-devtools","dir":"","previous_headings":"","what":"Development Workflow Commands (using devtools)","title":"Project Context for r2rtf","text":"Load package development: devtools::load_all() Run tests: devtools::test() Run specific tests: devtools::test(filter = \"rtf_title\") Build package: devtools::build() Check package: devtools::check() Generate/update documentation: devtools::document() roxygen2::roxygenise() Install package locally: devtools::install() Build pkgdown site: pkgdown::build_site() devtools::build_site() Build reference : pkgdown::build_reference() Build articles : pkgdown::build_articles()","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"system-dependencies-macos-with-homebrew","dir":"","previous_headings":"","what":"System Dependencies (macOS with Homebrew)","title":"Project Context for r2rtf","text":"Required system libraries development: - libgit2 - gert package - harfbuzz, fribidi - textshaping package - freetype, libpng, libtiff, libjpeg-turbo - ragg package - pkg-config - package configuration - pandoc - building documentation vignettes Install : brew install libgit2 harfbuzz fribidi freetype libpng libtiff libjpeg-turbo pkg-config pandoc","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"package-installation","dir":"","previous_headings":"","what":"Package Installation","title":"Project Context for r2rtf","text":"better dependency management, use pak:","code":"# Install pak if not available install.packages(\"pak\", repos = \"https://r-lib.github.io/p/pak/stable/\")  # Install development tools pak::pkg_install(c(\"devtools\", \"tidyverse\", \"testthat\", \"roxygen2\", \"pkgdown\", \"emmeans\"))"},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"key-functions-being-maintained","dir":"","previous_headings":"","what":"Key Functions Being Maintained","title":"Project Context for r2rtf","text":"rtf_title() - Add title attributes tables rtf_colheader() - Add column header attributes tables rtf_subline() - Add subline attributes tables rtf_body() - Format table body rtf_footnote() - Add footnotes tables rtf_source() - Add source information tables rtf_page() - Set page attributes","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"recent-changes","dir":"","previous_headings":"","what":"Recent Changes","title":"Project Context for r2rtf","text":"Default value TRUE backward compatibility Allows users control text hyphenation RTF output Branch: feature/issue-235-text-hyphenation","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"important-files","dir":"","previous_headings":"","what":"Important Files","title":"Project Context for r2rtf","text":"DESCRIPTION: Package metadata NAMESPACE: Exported functions R/: Source code tests/testthat/: Unit tests man/: Documentation (auto-generated roxygen2) vignettes/: Package vignettes inst/: Additional package files","code":""},{"path":"https://merck.github.io/r2rtf/CLAUDE.html","id":"testing-approach","dir":"","previous_headings":"","what":"Testing Approach","title":"Project Context for r2rtf","text":"Unit tests using testthat framework Test files named test-independent-testing-*.R Snapshot tests complex output validation Always verify changes don’t break existing functionality","code":""},{"path":"https://merck.github.io/r2rtf/articles/design-pattern.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"r2rtf Design Pattern","text":"document developers like understand internal r2rtf package. r2rtf package developed standardize approach generate highly customized tables, listings figures (TLFs) RTF format provide flexibility customize table appearance table title, subtitle, column header, footnote, data source. r2rtf package designed enables pipes (%>%), first argument tbl except rtf_read_figure() write_rtf(). minimal example summarized major steps using r2rtf package create table listing data frame ready. Similar step used create figure. First generate figure png format, use rtf_read_figure() read png file, proceed rtf generation.","code":"head(iris) %>%   rtf_body() %>% # Step 1 Add attributes   rtf_encode() %>% # Step 2 Convert attributes to RTF encode   write_rtf(file = \"rtf/ex-tbl.rtf\") # Step 3 Write to a .rtf file fig <- c(\"fig/fig1.png\") fig %>% rtf_read_figure() %>% # Step 1 Read in PNG file   rtf_figure() %>% # Step 2 Add attributes   rtf_encode(doc_type = \"figure\") %>% # Step 3 Convert attributes to RTF encode   write_rtf(file = \"rtf/ex-fig.rtf\") # Step 4 Write to a .rtf file"},{"path":"https://merck.github.io/r2rtf/articles/design-pattern.html","id":"data-structure-and-attributes","dir":"Articles","previous_headings":"","what":"Data Structure and Attributes","title":"r2rtf Design Pattern","text":"explore rtf_page() illustrate attributes data frame used. rtf_page() function define feature page rtf document. example, need set page orientation, width, height, margin etc. information attached data frame using attributes. Therefore, core part rtf_page() assign attributes input data frame (tbl) . Necessary input checking using check_arg(), stopifnot() match.arg(), provided function provide informative error message unexpected input. attributes saved logical way summarized table . access attributes, attr() attributes() function can used. example, get page attributes default setting, can run code . table body attributes complicated page attributes. Take rtf_body() example, meets user’s need take fully control table appearance parameters customize table size, space, border type (e.g., single, double, dash, dot, etc.), color (e.g., 657 different colors named color() function), line width, column width, row height, text format (e.g., bold, italics, strikethrough, underline combinations), font size, text color, alignment (e.g., left, right, center, decimal), etc. Format control can cell, row, column, table level. help functions obj_rtf_text() obj_rtf_border(), straightforward pass user inputs text/border attributes. example, parameter text_justification = \"c\" sets text cells center adjusted text_justification = c(\"c\", rep(\"l\", 4)) sets text first column center adjusted texts remaining 4 columns left adjusted table five columns. addition, rtf_body() initiates “page” attributes color used table elements (border, text, etc.). Similarly rtf_body(), package also includes rtf_colheader(), rtf_footnote(), rtf_source(), rtf_subline(), rtf_text(), rtf_title() rtf_figure() assign attributes certain component output. simple example using functions together table/figure.","code":"attr(tbl, \"page\")$orientation <- orientation attr(tbl, \"page\")$width <- width attr(tbl, \"page\")$height <- height attr(tbl, \"page\")$margin <- margin attr(tbl, \"page\")$border_color_first <- border_color_first tbl <- head(iris) %>% rtf_page() data.frame(value = unlist(attr(tbl, \"page\"))) #>                  value #> width              8.5 #> height              11 #> orientation   portrait #> margin1           1.25 #> margin2              1 #> margin3           1.75 #> margin4           1.25 #> margin5           1.75 #> margin6        1.00625 #> nrow                40 #> col_width         6.25 #> border_first    double #> border_last     double #> page_title         all #> page_footnote     last #> page_source       last #> use_color        FALSE #> use_i18n         FALSE head(iris) %>% rtf_body() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9           3          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5            5         3.6          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa head(iris) %>% # Step 1 Read in data frame   rtf_title(\"iris\") %>% # Step 2 Add title   rtf_colheader(\"A | B | C | D | E\") %>% # Step 3 Add column header   rtf_body() %>% # Step 4 Add attributes   rtf_footnote(\"This is a footnote\") %>% # Step 5 Add footnote   rtf_source(\"Source: xxx\") # Step 6 Add data source \"fig/tmp-fig.png\" %>%   rtf_read_figure() %>% # Step 1 Read PNG files from the file path   rtf_title(\"title\", \"subtitle\") %>% # Step 2 Add title or subtitle   rtf_footnote(\"footnote\") %>% # Step 3 Add footnote   rtf_source(\"[datasource: mk0999]\") %>% # Step 4 Add data source   rtf_figure() # Step 5 Add figure attributes"},{"path":"https://merck.github.io/r2rtf/articles/design-pattern.html","id":"rtf-encoding","dir":"Articles","previous_headings":"","what":"RTF Encoding","title":"r2rtf Design Pattern","text":"rtf_encode() wraps internal functions r2rtf package translate attributes attached data frame RTF syntax. good reference RTF Pocket Guide. internal encoding functions r2rtf package start prefix as_rtf_. table, r2rtf:::rtf_encode_table() used internally translate attribute RTF syntax using set as_rtf_ functions. Likewise, rtf_encode_list() used multiple data frame different data structures stacked, often seen efficacy analysis. rtf_encode_figure() used figure outputs. r2rtf:::as_rtf_colheader() define column header table listing. r2rtf:::as_rtf_color() define color used text border. r2rtf:::as_rtf_end() define end rtf encode string. r2rtf:::as_rtf_font() define font encode. r2rtf:::as_rtf_footnote() define footnote encode. r2rtf:::as_rtf_init() initiates rtf encode ‘English’ default language. r2rtf:::as_rtf_margin() define page margin. r2rtf:::as_rtf_new_page() initiates new page encode. r2rtf:::as_rtf_page() define page width (\\paperw) height(\\paperh). r2rtf:::as_rtf_pageby() define page_by encoding argument page_by NULL rtf_body(). r2rtf:::as_rtf_paragraph() define title/text attribute paragraph. r2rtf:::as_rtf_source() define source encode. r2rtf:::as_rtf_subline() define subline encode. r2rtf:::as_rtf_table() define table encode. r2rtf:::as_rtf_title() define title encode. minimal example, can create RTF file combining different pieces RTF code. simplicity, show first two rows iris data save RTF code .rtf file. Microsoft Word RTF Viewer software can display file properly.","code":"head(iris) %>%   rtf_body() %>%   r2rtf:::as_rtf_colheader() %>%   cat() head(iris) %>%   rtf_body(text_color = \"red\") %>%   r2rtf:::as_rtf_color() %>%   cat() r2rtf:::as_rtf_end() %>% cat() r2rtf:::as_rtf_font() %>% cat() head(iris) %>%   rtf_footnote(\"example\") %>%   r2rtf:::as_rtf_footnote() %>%   cat() #> \\trowd\\trgaph108\\trleft0\\trqc #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrw15\\clbrdrr\\brdrs\\brdrw15\\clbrdrb\\brdrs\\brdrw15\\clvertalt\\cellx9000 #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\ql\\fs18{\\f0 example}\\cell #> \\intbl\\row\\pard r2rtf:::as_rtf_init() %>% cat() head(iris) %>%   rtf_page() %>%   r2rtf::as_rtf_margin() %>%   cat() r2rtf::as_rtf_new_page() %>% cat() head(iris) %>%   rtf_page() %>%   r2rtf:::as_rtf_page() %>%   cat() iris %>%   rtf_body(page_by = \"Species\") %>%   r2rtf:::as_rtf_pageby() %>%   cat() r2rtf:::as_rtf_paragraph(attr(head(iris) %>% rtf_title(\"example\"), \"rtf_title\")) %>% cat() head(iris) %>%   rtf_source(\"example\") %>%   r2rtf:::as_rtf_source() %>%   cat() head(iris) %>%   rtf_subline(\"example\") %>%   r2rtf:::as_rtf_subline() %>%   cat() head(iris) %>%   rtf_title(\"example\") %>%   r2rtf:::as_rtf_table() %>%   cat() head(iris) %>%   rtf_title(\"example\") %>%   r2rtf:::as_rtf_title() %>%   cat() tbl <- iris[1:2, ] %>% rtf_body()  paste(   r2rtf:::as_rtf_init(),   r2rtf:::as_rtf_font(),   r2rtf:::as_rtf_page(tbl),   r2rtf:::as_rtf_margin(tbl),   r2rtf:::as_rtf_table(tbl),   \"}\",   sep = \"\\n\" ) %>% cat() #> {\\rtf1\\ansi #> \\deff0\\deflang1033 #> {\\fonttbl{\\f0\\froman\\fcharset1\\fprq2 Times New Roman;} #> {\\f1\\froman\\fcharset161\\fprq2 Times New Roman Greek;} #> {\\f2\\fswiss\\fcharset161\\fprq2 Arial Greek;} #> {\\f3\\fswiss\\fcharset0\\fprq2 Arial;} #> {\\f4\\fswiss\\fcharset1\\fprq2 Helvetica;} #> {\\f5\\fswiss\\fcharset1\\fprq2 Calibri;} #> {\\f6\\froman\\fcharset1\\fprq2 Georgia;} #> {\\f7\\ffroman\\fcharset1\\fprq2 Cambria;} #> {\\f8\\fmodern\\fcharset0\\fprq2 Courier New;} #> {\\f9\\ftech\\fcharset2\\fprq2 Symbol;} #> } #>  #> \\paperw12240\\paperh15840 #>  #> \\margl1800\\margr1440\\margt2520\\margb1800\\headery2520\\footery1449 #>  #> \\trowd\\trgaph108\\trleft0\\trqc #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrs\\brdrw15\\clbrdrb\\brdrw15\\clvertalt\\cellx1800 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrs\\brdrw15\\clbrdrb\\brdrw15\\clvertalt\\cellx3600 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrs\\brdrw15\\clbrdrb\\brdrw15\\clvertalt\\cellx5400 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrs\\brdrw15\\clbrdrb\\brdrw15\\clvertalt\\cellx7200 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrs\\brdrw15\\clbrdrr\\brdrs\\brdrw15\\clbrdrb\\brdrw15\\clvertalt\\cellx9000 #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 5.1}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 3.5}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 1.4}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 0.2}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 setosa}\\cell #> \\intbl\\row\\pard #> } {\\rtf1\\ansi #> \\deff0\\deflang1033 #> {\\fonttbl{\\f0\\froman\\fcharset1\\fprq2 Times New Roman;} #> {\\f1\\froman\\fcharset161\\fprq2 Times New Roman Greek;} #> {\\f2\\fswiss\\fcharset161\\fprq2 Arial Greek;} #> {\\f3\\fswiss\\fcharset0\\fprq2 Arial;} #> {\\f4\\fswiss\\fcharset1\\fprq2 Helvetica;} #> {\\f5\\fswiss\\fcharset1\\fprq2 Calibri;} #> {\\f6\\froman\\fcharset1\\fprq2 Georgia;} #> {\\f7\\ffroman\\fcharset1\\fprq2 Cambria;} #> {\\f8\\fmodern\\fcharset0\\fprq2 Courier New;} #> {\\f9\\ftech\\fcharset2\\fprq2 Symbol;} #> } #>  #> \\paperw12240\\paperh15840 #>  #> \\margl1800\\margr1440\\margt2520\\margb1800\\headery2520\\footery1449 #>  #> \\trowd\\trgaph108\\trleft0\\trqc #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrw15\\clbrdrb\\brdrs\\brdrw15\\clvertalt\\cellx1800 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrw15\\clbrdrb\\brdrs\\brdrw15\\clvertalt\\cellx3600 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrw15\\clbrdrb\\brdrs\\brdrw15\\clvertalt\\cellx5400 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrw15\\clbrdrb\\brdrs\\brdrw15\\clvertalt\\cellx7200 #> \\clbrdrl\\brdrs\\brdrw15\\clbrdrt\\brdrw15\\clbrdrr\\brdrs\\brdrw15\\clbrdrb\\brdrs\\brdrw15\\clvertalt\\cellx9000 #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 4.9}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 3}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 1.4}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 0.2}\\cell #> \\pard\\hyphpar0\\sb15\\sa15\\fi0\\li0\\ri0\\qc\\fs18{\\f0 setosa}\\cell #> \\intbl\\row\\pard #> }"},{"path":"https://merck.github.io/r2rtf/articles/design-pattern.html","id":"save-rtf-file","dir":"Articles","previous_headings":"","what":"Save RTF File","title":"r2rtf Design Pattern","text":"everything translated RTF code using rtf_encode(). simple step save RTF code .rtf file. write_rtf() simple wrapper write() function, exports single RTF string output file. simple example overview section.","code":"head(iris) %>%   rtf_body() %>% # Step 1 Add attributes   rtf_encode() %>% # Step 2 Convert attributes to RTF encode   write_rtf(file = \"tmp.rtf\") # Step 3 Write to a .rtf file"},{"path":"https://merck.github.io/r2rtf/articles/design-pattern.html","id":"dictionary-and-conversion","dir":"Articles","previous_headings":"","what":"Dictionary and Conversion","title":"r2rtf Design Pattern","text":"mentioned earlier, functions dictionary.R file contains commonly used font types, formats, border types, etc. attributes mapped data frame contains element names corresponding RTF encode. User allowed key whatever defined dictionary rtf_ functions, error message provided result match_arg(). Superscripts, scripts taken care using convert() function translate LaTeX code Unicode. example:","code":"r2rtf:::font_type() #>    type                  name     style rtf_code    family       charset #> 1     1       Times New Roman  \\\\froman     \\\\f0     Times   \\\\fcharset1 #> 2     2 Times New Roman Greek  \\\\froman     \\\\f1     Times \\\\fcharset161 #> 3     3           Arial Greek  \\\\fswiss     \\\\f2   ArialMT \\\\fcharset161 #> 4     4                 Arial  \\\\fswiss     \\\\f3   ArialMT   \\\\fcharset0 #> 5     5             Helvetica  \\\\fswiss     \\\\f4 Helvetica   \\\\fcharset1 #> 6     6               Calibri  \\\\fswiss     \\\\f5   Calibri   \\\\fcharset1 #> 7     7               Georgia  \\\\froman     \\\\f6   Georgia   \\\\fcharset1 #> 8     8               Cambria \\\\ffroman     \\\\f7   Cambria   \\\\fcharset1 #> 9     9           Courier New \\\\fmodern     \\\\f8   Courier   \\\\fcharset0 #> 10   10                Symbol   \\\\ftech     \\\\f9     Times   \\\\fcharset2 #> 11   11                SimSun    \\\\fnil    \\\\f10    SimSun \\\\fcharset134 #>    width_group #> 1            1 #> 2            1 #> 3            4 #> 4            4 #> 5            4 #> 6            1 #> 7            9 #> 8            4 #> 9            9 #> 10           9 #> 11           1 r2rtf:::convert(c(\"^\", \"<=\")) #> [1] \"\\\\super \"       \"\\\\uc1\\\\u8804* \""},{"path":"https://merck.github.io/r2rtf/articles/design-pattern.html","id":"pageby","dir":"Articles","previous_headings":"","what":"Pageby","title":"r2rtf Design Pattern","text":"commonly seen variable displayed headline group category (e.g. baseline characteristic table). achieve , user first need sort input data frame page_by variable define rtf_body(). Border text attributes controlled together variables vectors.","code":"iris %>%   arrange(Species) %>%   rtf_colheader(\"Sepal Length | Sepal Width | Petal Length | PetalWidth\", ) %>%   rtf_body(     page_by = c(\"Species\"),     border_top = c(rep(\"\", 4), c(\"single\")),     border_bottom = c(rep(\"\", 4), c(\"single\")),     text_justification = c(rep(\"c\", 4), c(\"l\")),     new_page = TRUE   ) %>%   rtf_encode() %>%   write_rtf(\"pageby.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/design-pattern.html","id":"utility-functions","dir":"Articles","previous_headings":"","what":"Utility functions","title":"r2rtf Design Pattern","text":"check_args(): Function argument checking types, length dimension, function used export functions except write_rtf(). match_arg(): Function argument verification input values see whether match dictionary() defined values, function used export functions except write_rtf(). footnote_source_space(): Function derive space adjustment, whose results used rtf_footnote() rtf_source() indentation defined user.","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-ae-summary.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"RTF Examples for AE Summary Count Tables","text":"example shows create simplified adverse events summary table .","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-ae-summary.html","id":"step-1-create-data-for-rtf-table","dir":"Articles","previous_headings":"Example","what":"Step 1: Create data for RTF table","title":"RTF Examples for AE Summary Count Tables","text":"","code":"data(r2rtf_adae) ae_t1 <- r2rtf_adae %>%   group_by(TRTA) %>%   mutate(n_subj = n_distinct(USUBJID)) %>%   group_by(TRTA, AEDECOD) %>%   summarise(     n_ae = n_distinct(USUBJID),     pct = round(n_ae / unique(n_subj) * 100, 2)   ) %>%   dplyr::filter(n_ae > 5) %>%   # only show AE terms with at least 5 subjects in one treatment group.   pivot_longer(cols = c(n_ae, pct), names_to = \"var\", values_to = \"value\") %>%   unite(temp, TRTA, var) %>%   pivot_wider(names_from = temp, values_from = value, values_fill = 0) ## `summarise()` has grouped output by 'TRTA'. You can override using the ## `.groups` argument. knitr::kable(ae_t1)"},{"path":"https://merck.github.io/r2rtf/articles/example-ae-summary.html","id":"step-2-define-table-format","dir":"Articles","previous_headings":"Example","what":"Step 2: Define table format","title":"RTF Examples for AE Summary Count Tables","text":"","code":"ae_tbl <- ae_t1 %>%   rtf_title(     \"Analysis of Subjects With Specific Adverse Events\",     c(       \"(Incidence > 5 Subjects in One or More Treatment Groups)\",       \"ASaT\"     )   ) %>%   rtf_colheader(\" | Placebo | Drug High Dose | Drug Low Dose\",     col_rel_width = c(4, rep(2, 3))   ) %>%   rtf_colheader(\" | n | (%) | n | (%) | n | (%)\",     col_rel_width = c(4, rep(1, 6)),     border_top = c(\"\", rep(\"single\", 6)),     border_left = c(\"single\", rep(c(\"single\", \"\"), 3))   ) %>%   rtf_body(     col_rel_width = c(4, rep(1, 6)),     text_justification = c(\"l\", rep(\"c\", 6)),     border_left = c(\"single\", rep(c(\"single\", \"\"), 3))   ) %>%   rtf_footnote(c(\"{^\\\\dagger}This is footnote 1\", \"This is footnote 2\"), ) %>%   rtf_source(\"Source: xxx\")"},{"path":"https://merck.github.io/r2rtf/articles/example-ae-summary.html","id":"step-3-output","dir":"Articles","previous_headings":"Example","what":"Step 3: Output","title":"RTF Examples for AE Summary Count Tables","text":"","code":"# Output .rtf file ae_tbl %>%   rtf_encode() %>%   write_rtf(\"rtf/ae_example.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/example-basechar.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"RTF Examples for Baseline Characteristics Tables","text":"example shows create baseline characteristic table .","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-basechar.html","id":"step-1-define-utility-functions","dir":"Articles","previous_headings":"Example","what":"Step 1: Define utility functions","title":"RTF Examples for Baseline Characteristics Tables","text":"defined two utility functions analysis purpose. Summarize categorical variable Summarize continuous variable","code":"bs_count <- function(data, grp, var,                      var_label = var,                      decimal = 1,                      total = TRUE) {   data <- data %>% rename(grp = !!grp, var = !!var)   coding <- levels(factor(data$grp))   data <- data %>% mutate(grp = as.numeric(factor(grp)))    res <- with(data, table(var, grp)) %>%     as.data.frame() %>%     mutate(grp = as.numeric(grp))    if (total) {     res_tot <- with(data, table(var)) %>%       as.data.frame() %>%       mutate(grp = 9999)     res <- bind_rows(res, res_tot)   }    res <- res %>% rename(n = Freq)    res <- res %>% mutate(pct = formatC(n / sum(n) * 100, digits = decimal, format = \"f\", flag = \"0\"))    res$n <- as.character(res$n)    res <- res %>%     pivot_longer(cols = c(n, pct), names_to = \"key\", values_to = \"value\") %>%     unite(keys, grp, key) %>%     pivot_wider(names_from = keys, values_from = value) %>%     mutate(var_label = var_label) %>%     mutate(var = as.character(var))    names(res) <- gsub(\"_n\", \"\", names(res), fixed = TRUE)   attr(res, \"coding\") <- coding    res } bs_continuous <- function(data, grp, var,                           var_label = var,                           decimal = 1,                           total = TRUE,                           blank_row = FALSE) {   data <- data %>% rename(grp = !!grp, var = !!var)   coding <- levels(factor(data$grp))   data <- data %>% mutate(grp = as.numeric(factor(grp)))    res <- data %>%     select(grp, var) %>%     na.omit() %>%     group_by(grp) %>%     summarise(       `Subjects with data` = n(),       Mean = formatC(mean(var), digits = decimal, format = \"f\", flag = \"0\"),       SD = formatC(sd(var), digits = decimal, format = \"f\", flag = \"0\"),       Median = formatC(median(var), digits = decimal, format = \"f\", flag = \"0\"),       Range = paste(range(var), collapse = \" to \")     )    if (total) {     res_tot <- data %>%       select(grp, var) %>%       na.omit() %>%       summarise(         `Subjects with data` = n(),         Mean = formatC(mean(var), digits = decimal, format = \"f\", flag = \"0\"),         SD = formatC(sd(var), digits = decimal, format = \"f\", flag = \"0\"),         Median = formatC(median(var), digits = decimal, format = \"f\", flag = \"0\"),         Range = paste(range(var), collapse = \" to \")       ) %>%       mutate(grp = 9999)     res <- bind_rows(res, res_tot)   }    res$\"Subjects with data\" <- as.character(res$\"Subjects with data\")    res <- res %>%     pivot_longer(cols = -grp, names_to = \"key\", values_to = \"value\") %>%     mutate(key = factor(key, levels = c(\"Subjects with data\", \"Mean\", \"SD\", \"Median\", \"Range\"))) %>%     pivot_wider(names_from = grp, values_from = value) %>%     mutate(var_label = var_label) %>%     mutate(key = as.character(key)) %>%     rename(var = key)    if (blank_row) {     res <- bind_rows(tibble(var_label = var_label), res)   }    res }"},{"path":"https://merck.github.io/r2rtf/articles/example-basechar.html","id":"step-2-create-data-for-rtf-table","dir":"Articles","previous_headings":"Example","what":"Step 2: Create data for rtf table","title":"RTF Examples for Baseline Characteristics Tables","text":"Convert variable factors properly define display order","code":"# The code above define two utility function for baseline characteristic tables.  # Analysis Set data(r2rtf_adsl) ana <- r2rtf_adsl %>% subset(ITTFL == \"Y\")  ana <- ana %>% mutate(   RACE = factor(     RACE,     c(\"WHITE\", \"BLACK OR AFRICAN AMERICAN\", \"AMERICAN INDIAN OR ALASKA NATIVE\"),     c(\"White\", \"Black\", \"Other\")   ),   SEX = factor(     SEX,     c(\"F\", \"M\"),     c(\"Female\", \"Male\")   ),   AGEGR1 = factor(     AGEGR1,     levels = c(\"<65\", \"65-80\", \">80\")   ) )  # Build Data for r2rtf bs_tb <- bind_rows(   bs_count(ana, \"TRT01AN\", \"SEX\", \"Gender\"),   bs_count(ana, \"TRT01AN\", \"AGEGR1\", \"Age (Years)\"),   bs_continuous(ana, \"TRT01AN\", \"AGE\", \"Age (Years)\", blank_row = TRUE),   bs_count(ana, \"TRT01AN\", \"RACE\", \"Race\") ) %>% mutate(   var_label = factor(var_label, levels = c(\"Gender\", \"Age (Years)\", \"Race\")) )  bs_tb[is.na(bs_tb)] <- \"\" # convert NA to blank string. knitr::kable(bs_tb)"},{"path":"https://merck.github.io/r2rtf/articles/example-basechar.html","id":"step-3-define-table-format","dir":"Articles","previous_headings":"Example","what":"Step 3: Define table format","title":"RTF Examples for Baseline Characteristics Tables","text":"using new_page = TRUE rtb_body(), 3 parts outputted 3 pages page_by variable rtf_colheader(). However, rtf_body()","code":"bs_rtf <- bs_tb %>%   rtf_page(width = 9.5) %>%   rtf_title(\"Demographic and Anthropometric Characteristics\", \"ITT Subjects\") %>%   rtf_colheader(\" | Placebo | Drug Low Dose | Drug High Dose | Total \",     col_rel_width = c(3, rep(2, 4))   ) %>%   rtf_colheader(\" | n | (%) | n | (%) | n | (%) | n | (%) \",     col_rel_width = c(3, rep(c(1.2, 0.8), 4)),     border_top = c(\"\", rep(\"single\", 8)),     border_left = c(\"single\", rep(c(\"single\", \"\"), 4))   ) %>%   rtf_body(     page_by = \"var_label\",     col_rel_width = c(3, rep(c(1.2, 0.8), 4), 3),     text_justification = c(\"l\", rep(\"c\", 8), \"l\"),     text_format = c(rep(\"\", 9), \"b\"),     border_left = c(\"single\", rep(c(\"single\", \"\"), 4), \"single\"),     border_top = c(rep(\"\", 9), \"single\"),     border_bottom = c(rep(\"\", 9), \"single\"),   ) %>%   rtf_footnote(\"This is a footnote\") %>%   rtf_source(\"Source: xxx\")"},{"path":"https://merck.github.io/r2rtf/articles/example-basechar.html","id":"step-4-output","dir":"Articles","previous_headings":"Example","what":"Step 4: Output","title":"RTF Examples for Baseline Characteristics Tables","text":"","code":"# Output .rtf file bs_rtf %>%   rtf_encode() %>%   write_rtf(\"rtf/bs_example.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/example-efficacy.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"RTF Examples for Efficacy Tables","text":"example shows create efficacy table .","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-efficacy.html","id":"step-1-define-some-utility-functions","dir":"Articles","previous_headings":"Example","what":"Step 1: Define some utility functions","title":"RTF Examples for Efficacy Tables","text":"Format Model Estimator Format Confidence Interval Format P-Value","code":"#' The function assume 1 or 2 column. #'   If there is only 1 column, only represent mean #'   If there are 2 column, represent mean (sd) or mean(se) #' Decimals will understand the number will be formatted as x.x(x.xx) #' @noRd fmt_est <- function(data, columns = c(\"mean\", \"sd\"), decimals = c(1, 2)) {   .mean <- formatC(data[[columns[[1]]]], digits = decimals[1], format = \"f\", flag = \"0\")   if (length(columns) > 1) {     .sd <- formatC(data[[columns[[2]]]], digits = decimals[2], format = \"f\", flag = \"0\")     paste0(.mean, \" (\", .sd, \")\")   } else {     .mean   } } #' @noRd fmt_ci <- function(data, columns = c(\"lower.CL\", \"upper.CL\"), decimals = 2) {   .lower <- formatC(data[[columns[[1]]]], digits = decimals, format = \"f\", flag = \"0\")   .upper <- formatC(data[[columns[[2]]]], digits = decimals, format = \"f\", flag = \"0\")   paste0(\"(\", .lower, \", \", .upper, \")\") } #' @noRd fmt_pval <- function(data, columns = \"p.value\", decimals = 3) {   scale <- 10^(-1 * decimals)   p_scale <- paste0(\"<\", scale)   if_else(data[[columns[[1]]]] < scale, p_scale,     formatC(data[[columns[[1]]]], digits = decimals, format = \"f\", flag = \"0\")   ) }"},{"path":"https://merck.github.io/r2rtf/articles/example-efficacy.html","id":"step-2-ancova-analysis-for-homa-data","dir":"Articles","previous_headings":"Example","what":"Step 2: ANCOVA analysis for HOMA data","title":"RTF Examples for Efficacy Tables","text":"data available https://www.lshtm.ac.uk/research/centres-projects-groups/missing-data#dia-missing-data. Read data run ANCOVA model Raw summary LS means Treatment Comparison RMSE","code":"data(\"r2rtf_HAMD17\") HAMD17 <- r2rtf_HAMD17  ana_week <- 8 # Analysis Week  HAMD17_lmfit <- HAMD17 %>%   filter(week == ana_week) %>%   lm(change ~ basval + TRT, data = .) t11 <- HAMD17 %>%   filter(week == ana_week) %>%   group_by(TRT) %>%   summarise(     N = n(),     mean_bl = mean(basval),     sd_bl = sd(basval),     mean = mean(change),     sd = sd(change)   ) t12 <- emmeans(HAMD17_lmfit, \"TRT\") t1 <- merge(t11, t12) %>%   mutate(emmean_sd = SE * sqrt(df)) %>%   mutate(     Trt = c(\"Study Drug\", \"Placebo\"),     N1 = N,     Mean1 = fmt_est(., c(\"mean_bl\", \"sd_bl\")),     N2 = N,     Mean2 = fmt_est(., c(\"mean\", \"sd\")),     N3 = N,     Mean3 = fmt_est(., c(\"emmean\", \"emmean_sd\")),     CI = paste(fmt_est(., \"emmean\"), fmt_ci(., c(\"lower.CL\", \"upper.CL\")))   ) %>%   select(Trt:CI) knitr::kable(t1) t2 <- data.frame(pairs(t12))  t2 <- t2 %>%   mutate(     lower = estimate - 1.96 * SE,     upper = estimate + 1.96 * SE   ) %>%   mutate(     comp = \"Study Drug vs. Placebo\",     mean = paste(fmt_est(., \"estimate\"), fmt_ci(., c(\"lower\", \"upper\"))),     p = fmt_pval(., \"p.value\")   ) %>%   select(comp:p) knitr::kable(t2) t3 <- data.frame(rmse = paste0(   \"Root Mean Squared Error of Change = \",   formatC(sd(HAMD17_lmfit$residuals), digits = 2, format = \"f\", flag = \"0\") )) knitr::kable(t3)"},{"path":"https://merck.github.io/r2rtf/articles/example-efficacy.html","id":"step-3-define-table-format","dir":"Articles","previous_headings":"Example","what":"Step 3: Define table format","title":"RTF Examples for Efficacy Tables","text":"table consists three data frames: t1, t2, t3. define data frame’s format combine listing.","code":"tbl_1 <- t1 %>%   rtf_title(     title = \"ANCOVA of Change from Baseline at Week 20\",     subtitle = c(       \"Missing Data Approach\",       \"Analysis Population\"     )   ) %>%   rtf_colheader(     colheader = \" | Baseline | Week 20 | Change from Baseline\",     col_rel_width = c(3, 4, 4, 9)   ) %>%   rtf_colheader(     colheader = \"Treatment | N | Mean (SD) | N | Mean (SD) | N | Mean (SD) | LS Mean (95% CI){^a}\",     col_rel_width = c(3, 1, 3, 1, 3, 1, 3, 5)   ) %>%   rtf_body(     col_rel_width = c(3, 1, 3, 1, 3, 1, 3, 5),     text_justification = c(\"l\", rep(\"c\", 7)),     last_row = FALSE   ) %>%   rtf_footnote(     footnote = c(       \"{^a}Based on an ANCOVA model.\",       \"ANCOVA = Analysis of Covariance, CI = Confidence Interval, LS = Least Squares, SD = Standard Deviation\"     )   ) %>%   rtf_source(     source = \"Source: [study999: adam-adeff]\"   )  tbl_2 <- t2 %>%   rtf_colheader(     colheader = \"Pairwise Comparison | Difference in LS Mean (95% CI){^a} | p-Value\",     text_justification = c(\"l\", \"c\", \"c\"),     col_rel_width = c(8, 7, 5)   ) %>%   rtf_body(     col_rel_width = c(8, 7, 5),     text_justification = c(\"l\", \"c\", \"c\"),     last_row = FALSE   )  tbl_3 <- t3 %>%   rtf_body(     as_colheader = FALSE,     col_rel_width = c(1),     text_justification = \"l\"   )  tbl <- list(tbl_1, tbl_2, tbl_3) knitr::kable(tbl)"},{"path":"https://merck.github.io/r2rtf/articles/example-efficacy.html","id":"step-4-output","dir":"Articles","previous_headings":"Example","what":"Step 4: Output","title":"RTF Examples for Efficacy Tables","text":"","code":"# Output .rtf file tbl %>%   rtf_encode() %>%   write_rtf(\"rtf/efficacy_example.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/example-figure.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"RTF Examples for Figures","text":"example shows create embed figures RTF file . example adjusted page orientation, figure height width.","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-figure.html","id":"overall-workflow","dir":"Articles","previous_headings":"Examples","what":"Overall workflow","title":"RTF Examples for Figures","text":"package allow user embed multiple figures one RTF document. supported format listed . using png file example, workflow can summarized : Save figures PNG format. (e.g. using png() ggplot2::ggsave()). Read PNG files R binary file using r2rtf::rtf_read_figure(). Add optional features using r2rtf::rtf_title(), r2rtf::rtf_footnote(), r2rtf::rtf_source(). Set page figure options using r2rtf::rtf_page(), r2rtf::rtf_figure(). Encode rtf using r2rtf::rtf_encode(doc_type = \"figure\"). (Note: important set doc_type = \"figure\" default doc_type = \"table\" handle tables). Write rtf file using r2rtf::write_rtf(). emf format, one may use R package devEMF create figure.","code":"r2rtf:::fig_format() ##   type   rtf_code ## 1  emf  \\\\emfblip ## 2  png  \\\\pngblip ## 3 jpeg \\\\jpegblip"},{"path":"https://merck.github.io/r2rtf/articles/example-figure.html","id":"simple-example","dir":"Articles","previous_headings":"Examples > Overall workflow","what":"Simple Example","title":"RTF Examples for Figures","text":"","code":"# Define the path of figure filename <- c(\"fig/fig1.png\", \"fig/fig2.png\", \"fig/fig3.png\")  filename %>%   rtf_read_figure() %>% # read PNG files from the file path   rtf_title(\"title\", \"subtitle\") %>% # add title or subtitle   rtf_footnote(\"footnote\") %>% # add footnote   rtf_source(\"[datasource: mk0999]\") %>% # add data source   rtf_figure() %>% # default setting of page and figure   rtf_encode(doc_type = \"figure\") %>% # encode rtf as figure   write_rtf(file = \"rtf/fig-simple.rtf\") # write RTF to a file"},{"path":"https://merck.github.io/r2rtf/articles/example-figure.html","id":"example-with-features","dir":"Articles","previous_headings":"Examples > Overall workflow","what":"Example with features","title":"RTF Examples for Figures","text":"Features page figure can set rtf_page rtf_figure respectively: Page orientation: orientation argument rtf_page. Figure height width: fig_height fig_width arguments rtf_figure. figure height width can set figure vector. code provides example features.","code":"filename %>%   rtf_read_figure() %>% # read PNG files from the file path   rtf_page(orientation = \"landscape\") %>% # set page orientation   rtf_title(\"title\", \"subtitle\") %>% # add title or subtitle   rtf_footnote(\"footnote\") %>% # add footnote   rtf_source(\"[datasource: mk0999]\") %>% # add data source   rtf_figure(     fig_height = 3.5, # set figure height     fig_width = c(6, 7, 8) # set figure width individually.   ) %>%   rtf_encode(doc_type = \"figure\") %>% # encode rtf as figure   write_rtf(file = \"rtf/fig-landscape.rtf\") # write RTF to a file"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"rtf_body(), r2rtf provided three advanced arguments customize table layout. page_by: variable used section header. group_by: variable display first appeared. subline_by: variable used page subline header. one arguments used, need properly ordered subline_by, page_by group_by. page_by, argument new_page pageby_header pageby_row customize table layout. Details can found rtf_body() documentation. provided three examples illustrate idea.","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"example-1-pageby","dir":"Articles","previous_headings":"","what":"Example 1: Pageby","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"used page_by variable illustrate create simple disposition table. Note: example also illustrate avoid row header setting corresponding value page_by variable \"-----\".","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-1-create-data-for-rtf-table","dir":"Articles","previous_headings":"Example 1: Pageby","what":"Step 1: Create data for RTF table","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"data(r2rtf_adsl) adsl <- r2rtf_adsl  # randomized row1 <- adsl %>%   subset(ITTFL == \"Y\") %>%   group_by(TRT01P) %>%   count()  # treated row2 <- adsl %>%   subset(SAFFL == \"Y\") %>%   group_by(TRT01P) %>%   summarise(trtn = n())  # completed study row3 <- adsl %>%   subset(SAFFL == \"Y\" & DCREASCD == \"Completed\") %>%   group_by(TRT01P) %>%   summarise(cmpln = n())  # discontinued study row4 <- adsl %>%   subset(SAFFL == \"Y\" & DCREASCD != \"Completed\") %>%   group_by(TRT01P) %>%   summarise(dcn = n())  # discontinuation reason reas <- adsl %>%   subset(SAFFL == \"Y\" & DCREASCD != \"Completed\") %>%   group_by(TRT01P, DCREASCD) %>%   summarise(reasn = n()) ## `summarise()` has grouped output by 'TRT01P'. You can override using the ## `.groups` argument. ds <- rbind(   row1 %>% merge(row2, by = \"TRT01P\") %>%     merge(row3, by = \"TRT01P\") %>%     merge(row4, by = \"TRT01P\") %>%     pivot_longer(2:5, names_to = \"DCREASCD\", values_to = \"n\") %>%     pivot_wider(names_from = TRT01P, values_from = \"n\"),   reas %>% pivot_wider(names_from = TRT01P, values_from = c(\"reasn\")) ) %>%   mutate(     DCREASCD = ifelse(DCREASCD == \"n\", \"Participants randomized\",       ifelse(DCREASCD == \"trtn\", \"Participants treated\",         ifelse(DCREASCD == \"cmpln\", \"Participants completed\",           ifelse(DCREASCD == \"dcn\", \"Participants discontinued\", paste0(\"   \", DCREASCD))         )       )     ),     pagebyvar = ifelse(substr(DCREASCD, 1, 5) == \"Parti\", \"-----\", \"Discontinued reason\")   ) %>%   # pagebyvar will be assigned to page_by argument in rtf_body function later.   # then table will be grouped by single cell row with pagebyvar's value in it.   # if pagebyvar's value is \"-----\", the single cell row will be removed from table.    select(pagebyvar, DCREASCD, \"Xanomeline High Dose\", \"Xanomeline Low Dose\", Placebo)  ds[is.na(ds)] <- 0 knitr::kable(head(ds))"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-2-define-table-format","dir":"Articles","previous_headings":"Example 1: Pageby","what":"Step 2: Define table format","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"ds_tbl <- ds %>%   rtf_title(\"Disposition of Participants\", \"(ITT Population)\") %>%   rtf_colheader(\" | Xanomeline High Dose |Xanomeline Low Dose | Placebo\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_colheader(\" | n | n | n \",     border_top = c(\"\", rep(\"single\", 3)),     col_rel_width = c(3, rep(2, 3))   ) %>%   # the table will be grouped by single cell row with pagebyvar's value in it.   # if pagebyvar's value is \"-----\", the single cell row will be removed from table.   rtf_body(     page_by = \"pagebyvar\",     col_rel_width = c(1, 3, 2, 2, 2),     text_justification = c(\"l\", \"l\", rep(\"c\", 3)),     text_format = c(\"b\", rep(\"\", 4)),     border_top = c(\"single\", rep(\"\", 4)),     border_bottom = c(\"single\", rep(\"\", 4)),   ) %>%   rtf_footnote(c(\"This is footnote\")) %>%   rtf_source(\"Source:  [Study MK9999P001: adam-adsl]\")"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-3-output","dir":"Articles","previous_headings":"Example 1: Pageby","what":"Step 3: Output","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"# Output .rtf file ds_tbl %>%   rtf_encode() %>%   write_rtf(\"rtf/pageby-disposition.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"example-2-pageby-with-pageby_row-first_row","dir":"Articles","previous_headings":"","what":"Example 2: Pageby with pageby_row = \"first_row\"","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"used page_by variable pageby_row = \"first_row\" illustrate create simple adverse events table.","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-1-create-data-for-rtf-table-1","dir":"Articles","previous_headings":"Example 2: Pageby with pageby_row = \"first_row\"","what":"Step 1: Create data for RTF table","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"# Read in and merge r2rtf_adsl and r2rtf_adae data data(r2rtf_adsl) data(r2rtf_adae)  ana <- r2rtf_adsl %>%   subset(SAFFL == \"Y\") %>%   select(USUBJID, TRT01AN, TRT01A)  # inner join adsl to bring in TRT01AN aedata <- inner_join(ana, r2rtf_adae, by = \"USUBJID\") %>%   filter(AEDECOD != \"\" & SAFFL == \"Y\" & AESEV == \"SEVERE\") %>%   mutate(     AEDECOD = tolower(AEDECOD),     AEBODSYS = tolower(AEBODSYS)   )  # participants part overall <- ana %>%   group_by(TRT01AN) %>%   summarise(n = n_distinct(USUBJID)) %>%   mutate(AEDECOD = \"Participants in population\")  withAE <- aedata %>%   group_by(TRT01AN) %>%   summarise(withAE = n_distinct(USUBJID)) %>%   mutate(AEDECOD = \"  with one or more severe AE\") %>%   rename(n = withAE)  woAE <- left_join(overall, withAE, by = \"TRT01AN\", suffix = c(\".x\", \".y\")) %>%   mutate(     woAE = n.x - n.y,     AEDECOD = \"  with no severe AE\"   ) %>%   select(TRT01AN, AEDECOD, woAE) %>%   rename(n = woAE)  part1 <- bind_rows(overall, withAE, woAE) %>%   pivot_wider(names_from = TRT01AN, values_from = n) %>%   mutate(AEBODSYS = \"  a\")  # AE part bodsys <- aedata %>%   group_by(TRT01AN, AEBODSYS) %>%   summarise(n = n_distinct(USUBJID))  decod <- aedata %>%   group_by(TRT01AN, AEBODSYS, AEDECOD) %>%   summarise(n = n_distinct(USUBJID)) %>%   arrange(AEBODSYS, AEDECOD)  part2 <- bind_rows(bodsys, decod) %>%   pivot_wider(names_from = TRT01AN, values_from = n, values_fill = 0) %>%   arrange(AEBODSYS, !is.na(AEDECOD)) %>%   mutate(AEDECOD = ifelse(is.na(AEDECOD), AEBODSYS, paste(\"  \", AEDECOD)))  blank <- tibble(AEBODSYS = \"  a\")  apr0ae <- bind_rows(part1, blank, part2) knitr::kable(head(apr0ae))"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-2-define-table-format-1","dir":"Articles","previous_headings":"Example 2: Pageby with pageby_row = \"first_row\"","what":"Step 2: Define table format","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"apr0ae_rtf <- apr0ae %>%   rtf_page(orientation = \"landscape\") %>%   rtf_title(c(\"Participants with Severe Adverse Events\", \"(Incidence \\\\geq 0% in One or More Treatment Groups)\"), \"(ASaT Population)\") %>%   rtf_colheader(\" | Placebo | Xanomeline Low Dose| Xanomeline High Dose  \",     col_rel_width = c(5, 2, 2, 2),     border_bottom = c(\"\", rep(\"single\", 3))   ) %>%   rtf_colheader(\" | n |  n  | n  \",     border_top    = c(\"\", rep(\"single\", 3)),     border_bottom = \"single\",     col_rel_width = c(5, rep(2, 3)),   ) %>%   rtf_body(     col_rel_width = c(5, rep(2, 3), 1),     text_justification = c(\"l\", \"c\", \"c\", \"c\", \"l\"),     border_first = \"\",     page_by = \"AEBODSYS\",     pageby_row = \"first_row\",   ) %>%   rtf_footnote(c(\"This is footnote\")) %>%   rtf_source(\"Source:  [Study MK9999P001: adam-adae]\")"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-3-output-1","dir":"Articles","previous_headings":"Example 2: Pageby with pageby_row = \"first_row\"","what":"Step 3: Output","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"# Output .rtf file apr0ae_rtf %>%   rtf_encode() %>%   write_rtf(\"rtf/pageby-firstrow-ae.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"example-3-sublineby-pageby-and-groupby-features","dir":"Articles","previous_headings":"","what":"Example 3: sublineby, pageby, and groupby features","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"used page_by, subline_by group_by illustrate create simple adverse events listing.","code":""},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-1-create-data-for-rtf-table-2","dir":"Articles","previous_headings":"Example 3: sublineby, pageby, and groupby features","what":"Step 1: Create data for RTF table","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"data(r2rtf_adae)  ae_t1 <- r2rtf_adae[200:260, ] %>%   mutate(     SUBLINEBY = paste0(       \"Trial Number: \", STUDYID,       \", Site Number: \", SITEID     ),     SUBJLINE = paste0(       \"Subject ID = \", USUBJID,       \", Gender = \", SEX,       \", Race = \", RACE,       \", AGE = \", AGE, \" Years\",       \", TRT = \", TRTA     ),     # create a subject line with participant's demographic information.     # this is for page_by argument in rtf_body function     AEDECD1 = tools::toTitleCase(AEDECOD), # propcase the AEDECOD     DUR = paste(ADURN, ADURU, sep = \" \")   ) %>% # AE duration with unit   select(USUBJID, ASTDY, AEDECD1, DUR, AESEV, AESER, AEREL, AEACN, AEOUT, TRTA, SUBJLINE, SUBLINEBY) # display variable using this order knitr::kable(head(ae_t1, 2))"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-2-define-table-format-2","dir":"Articles","previous_headings":"Example 3: sublineby, pageby, and groupby features","what":"Step 2: Define table format","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"ae_tbl <- ae_t1 %>%   # It is important to order variable properly.   arrange(SUBLINEBY, TRTA, SUBJLINE, USUBJID, ASTDY) %>%   rtf_page(orientation = \"landscape\", col_width = 9) %>%   rtf_page_header() %>%   rtf_page_footer(text = \"CONFIDENTIAL\") %>%   rtf_title(     \"Listing of Subjects With Serious Adverse Events\",     \"ASaT\"   ) %>%   rtf_colheader(\"Subject| Rel Day | Adverse | | | | |Action| |\",     col_rel_width = c(2.5, 2, 4, 2, 3, 2, 3, 2, 5)   ) %>%   rtf_colheader(\"ID| of Onset | Event | Duration | Intensity | Serious |                 Related | Taken| Outcome\",     border_top = \"\",     col_rel_width = c(2.5, 2, 4, 2, 3, 2, 3, 2, 5)   ) %>%   rtf_body(     col_rel_width = c(2.5, 2, 4, 2, 3, 2, 3, 2, 5, 1, 1, 1),     text_justification = c(\"l\", rep(\"c\", 8), \"l\", \"l\", \"l\"),     text_format = c(rep(\"\", 9), \"b\", \"\", \"b\"),     border_top = c(rep(\"\", 9), \"single\", \"single\", \"single\"),     border_bottom = c(rep(\"\", 9), \"single\", \"single\", \"single\"),     subline_by = \"SUBLINEBY\",     page_by = c(\"TRTA\", \"SUBJLINE\"),     group_by = c(\"USUBJID\", \"ASTDY\")   ) %>%   rtf_footnote(c(\"This is footnote 1\")) %>%   rtf_source(\"Source:  [Study MK9999P001: adam-adae]\")"},{"path":"https://merck.github.io/r2rtf/articles/example-sublineby-pageby-groupby.html","id":"step-3-output-2","dir":"Articles","previous_headings":"Example 3: sublineby, pageby, and groupby features","what":"Step 3: Output","title":"RTF Examples for Tables with Sublineby, Pageby, and Groupby Features","text":"","code":"# Output .rtf file ae_tbl %>%   rtf_encode() %>%   write_rtf(\"rtf/pageby-ae-listing.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to r2rtf","text":"r2rtf R package create production ready tables figures RTF format. R package designed provide simple “verb” functions correspond component table, help translate data frame table RTF file. enable pipes (%>%). focus table format. Data manipulation analysis handled R packages. (e.g., tidyverse) r2rtf minimizes package dependency creating RTF table need : Figure table layout. Split layout small tasks form computer program. Execute program. document introduces r2rtf basic set tools, show transfer data frames Table, Listing, Figure (TLFs). extended examples features covered different document listed vignettes.","code":""},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"data-adverse-events","dir":"Articles","previous_headings":"","what":"Data: Adverse Events","title":"Introduction to r2rtf","text":"explore basic RTF generation verbs r2rtf, use dataset r2rtf_adae. dataset contain adverse events (AE) information clinical trial. meaning relevant variables. information can found help page dataset (?r2rtf_adae) USUBJID: Unique Subject Identifier TRTA: Actual Treatment AEDECOD: Dictionary-Derived Term","code":"library(r2rtf) library(ggplot2) library(dplyr) library(tidyr) r2rtf_adae %>%   select(USUBJID, TRTA, AEDECOD) %>%   head(4) ##       USUBJID    TRTA                   AEDECOD ## 1 01-701-1015 Placebo APPLICATION SITE ERYTHEMA ## 2 01-701-1015 Placebo APPLICATION SITE PRURITUS ## 3 01-701-1015 Placebo                 DIARRHOEA ## 4 01-701-1023 Placebo                  ERYTHEMA"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"table-ready-data","dir":"Articles","previous_headings":"","what":"Table ready data","title":"Introduction to r2rtf","text":"dplyr tidyr packages used data manipulation create data frame contains information want add RTF table. Please note packages can also used purpose. AE example, provide number subjects type AE treatment group.","code":"tbl <- r2rtf_adae %>%   count(TRTA, AEDECOD) %>%   pivot_wider(names_from = TRTA, values_from = n, values_fill = 0) tbl %>% head(4) ## # A tibble: 4 × 4 ##   AEDECOD        Placebo `Xanomeline High Dose` `Xanomeline Low Dose` ##   <chr>            <int>                  <int>                 <int> ## 1 ABDOMINAL PAIN       1                      2                     3 ## 2 AGITATION            2                      1                     2 ## 3 ALOPECIA             1                      0                     0 ## 4 ANXIETY              2                      0                     4"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"single-table-verbs","dir":"Articles","previous_headings":"","what":"Single table verbs","title":"Introduction to r2rtf","text":"r2rtf aims provide one function type table layout. Commonly used verbs includes: rtf_page: RTF page information rtf_title: RTF title information rtf_colheader: RTF column header information rtf_body: RTF table body information rtf_footnote: RTF footnote information rtf_source: RTF data source information verbs designed enables usage pipes (%>%). full list functions can found package reference.","code":""},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple Example","title":"Introduction to r2rtf","text":"minimal example illustrates combine verbs using pipes create RTF table. rtf_body() defines table body layout. rtf_encode() transfers table layout information RTF syntax. write_rtf() saves RTF encoding file file extension .rtf.","code":"head(tbl) %>%   rtf_body() %>% # Step 1 Add table  attributes   rtf_encode() %>% # Step 2 Convert attributes to RTF encode   write_rtf(\"rtf/intro-ae1.rtf\") # Step 3 Write to a .rtf file"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"column-width","dir":"Articles","previous_headings":"","what":"Column Width","title":"Introduction to r2rtf","text":"want adjust width column provide space first column, can achieved updating col_rel_width rtf_body. input col_rel_width vector length number columns. argument defines relative length column within pre-defined total column width. example, defined relative width 3:2:2:2. ratio col_rel_width used. Therefore equivalent use col_rel_width = c(6,4,4,4) col_rel_width = c(1.5,1,1,1). Note: col_rel_width rtf_body() function control relative width table body. Therefore column header aligned expected. details provided next example take care column header width. total column width defined col_width argument rtf_page() function.","code":"head(tbl) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   # define relative width   rtf_encode() %>%   write_rtf(\"rtf/intro-ae2.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"column-headers","dir":"Articles","previous_headings":"","what":"Column Headers","title":"Introduction to r2rtf","text":"previous example, found issue misaligned column header. can fix issue using rtf_colheader() function. rtf_colheader, colheader argument used provide content column header. used \"|\" separate columns. also allow column headers displayed multiple lines. empty column name needed column, can insert space two vertical lines; e.g., \"name 1 | | name 3\". col_rel_width can used align column header different number columns. using rtf_colheader col_rel_width, one can customize complicated column headers. multiple pages, column header repeat page default.","code":"head(tbl) %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae3.rtf\") head(tbl, 50) %>%   rtf_colheader(     colheader = \" | Treatment\",     col_rel_width = c(3, 6)   ) %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae4.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"text-alignment","dir":"Articles","previous_headings":"","what":"Text Alignment","title":"Introduction to r2rtf","text":"rtf_*() functions rtf_body(), rtf_footnote(), text_justification argument used align text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed (e.g., c(\"c\",\"l\",\"r\")). possible inputs can found first column r2rtf:::justification(). example makes first column left-aligned center-aligned rest.","code":"r2rtf:::justification() ##   type      name rtf_code_text rtf_code_row ## 1    l      left          \\\\ql       \\\\trql ## 2    c    center          \\\\qc       \\\\trqc ## 3    r     right          \\\\qr       \\\\trqr ## 4    d   decimal          \\\\qj              ## 5    j justified          \\\\qj head(tbl) %>%   rtf_body(text_justification = c(\"l\", \"c\", \"c\", \"c\")) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae5.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"text-style","dir":"Articles","previous_headings":"","what":"Text Style","title":"Introduction to r2rtf","text":"rtf_*() functions rtf_body(), rtf_footnote(), etc., text_format argument used controlling text style. Default NULL normal. possible inputs corresponding text style can found r2rtf:::font_format(). Combination format type permitted input (e.g., \"ub\" bold underlined text). vary text format column, use character vector length vector equal number columns displayed (e.g., c(\"\", \"u\", \"ib\")). example make first column bold normal rest.","code":"r2rtf:::font_format() ##   type        name rtf_code ## 1           normal          ## 2    b        bold      \\\\b ## 3    i     italics      \\\\i ## 4    u   underline     \\\\ul ## 5    s      strike \\\\strike ## 6    ^ superscript  \\\\super ## 7    _   subscript    \\\\sub head(tbl) %>%   rtf_body(text_format = c(\"b\", \"\", \"\", \"\")) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae6.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"table-border","dir":"Articles","previous_headings":"","what":"Table Border","title":"Introduction to r2rtf","text":"rtf_*() functions rtf_body(), rtf_footnote(), etc., border_left, border_right, border_top, border_bottom control border. example intro-ae4.rtf, want remove top border \"Adverse Events\" header, can change default value \"single\" \"\" border_top argument shown . possible border type inputs can found r2rtf:::border_type(). 26 different border types display first six .","code":"head(r2rtf:::border_type()) ##         name     rtf_code ## 1                         ## 2     single      \\\\brdrs ## 3     double     \\\\brdrdb ## 4        dot    \\\\brdrdot ## 5       dash   \\\\brdrdash ## 6 small dash \\\\brdrdashsm head(tbl) %>%   rtf_colheader(     colheader = \" | Treatment\",     col_rel_width = c(3, 6)   ) %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     border_top = c(\"\", \"single\", \"single\", \"single\"),     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae7.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"title","dir":"Articles","previous_headings":"","what":"Title","title":"Introduction to r2rtf","text":"title(s) can added using rtf_title() function showed example. get guidance change title text style, aligning title, features rtf_title() function, help page ?r2rtf::rtf_title() good resource. can provide vector title argument. value separate line. format can also controlled providing vector input text_format. used soft return break lines title.","code":"head(tbl) %>%   rtf_title(     title = c(       \"Adverse Event Count by Treatment Group\",       \"(An example)\"     ),     text_format = c(\"b\", \"\")   ) %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae8.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"footnote","dir":"Articles","previous_headings":"","what":"Footnote","title":"Introduction to r2rtf","text":"footnote(s) can added using footnote argument rtf_footnote() function showed example. can provide vector footnote argument. value separate line. example showed case using as_table = TRUE (default) display footnote inside table body. example showed case using as_table = FALSE display footnote outside table body.","code":"head(tbl) %>%   rtf_title(title = \"Adverse Event Count by Treatment Group\") %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_footnote(     footnote = c(       \"Adverse events are coded according to MedDRA version 23.0\",       \"adam-adae\"     ),     as_table = TRUE   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae9.rtf\") head(tbl) %>%   rtf_title(title = \"Adverse Event Count by Treatment Group\") %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_footnote(     footnote = c(       \"Adverse events are coded according to MedDRA version 23.0\",       \"adam-adae\"     ),     as_table = FALSE   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae10.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data Source","title":"Introduction to r2rtf","text":"Data source can added using source argument rtf_source() function showed example. example showed case using as_table = FALSE (default) display data source outside table body. can also adjust data source left aligned. default alignment matches table border. example showed case using as_table = TRUE display data source inside table body.","code":"head(tbl) %>%   rtf_page(col_width = 5) %>%   # set total column width   rtf_title(title = \"Adverse Event Count by Treatment Group\") %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_source(     source = \"[datasource: adam-adae]\",     text_justification = \"l\",     as_table = FALSE   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae11.rtf\") head(tbl) %>%   rtf_title(title = \"Adverse Event Count by Treatment Group\") %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_source(     source = \"[datasource: adam-adae]\",     as_table = TRUE   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae12.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"special-character","dir":"Articles","previous_headings":"","what":"Special Character","title":"Introduction to r2rtf","text":"r2rtf package, '^' character converted rtf code '\\\\super' generate superscript; '_' subscript. Similarly, '<=' r2rtf package specified character converted LaTeX command '\\\\leq' generate special character ≤\\leq. LaTeX commands can used Greek letters math symbol α\\alpha, ±\\pm, ∞\\infty. need use double backslash \\\\ escape backslash R. .e. \"\\\\alpha\", \"\\\\pm\" \"\\\\infty\". list LaTeX commands can found . Example demonstrates idea.","code":"head(tbl) %>%   rtf_title(title = \"Adverse Event Count by Treatment Group{^a}\") %>%   rtf_colheader(     colheader = \"Adverse Events{\\\\super 1} | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_footnote(     footnote = c(       \"{\\\\super 1}Adverse events are coded according to MedDRA 20.0{<=}version {\\\\leq}23.0\",       \"\\\\alpha + \\\\gamma <= \\\\infty\",       \"{^a}adam-adae\"     ),     as_table = FALSE   ) %>%   rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae13.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"table-color","dir":"Articles","previous_headings":"","what":"Table Color","title":"Introduction to r2rtf","text":"cell’s text background color adjustable. Take intro-ae13.rtf example. want add gray background color cells 0 AE, need create color name matrix corresponding cell table body. need assign background color matrix text_background_color argument rtf_body() function shown . Note: creating color name matrix, element needs color name defined grDevices::colours().","code":"tbl1 <- head(tbl) color_matrix <- ifelse(trimws(apply(tbl1, 2, as.character)) == \"0\", \"gray\", \"white\") color_matrix ##      AEDECOD Placebo Xanomeline High Dose Xanomeline Low Dose ## [1,] \"white\" \"white\" \"white\"              \"white\"             ## [2,] \"white\" \"white\" \"white\"              \"white\"             ## [3,] \"white\" \"white\" \"gray\"               \"gray\"              ## [4,] \"white\" \"white\" \"gray\"               \"white\"             ## [5,] \"white\" \"white\" \"white\"              \"white\"             ## [6,] \"white\" \"white\" \"white\"              \"white\" tbl1 %>%   rtf_title(title = \"Adverse Event Count by Treatment Group\") %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 2, 2, 2)   ) %>%   rtf_body(     col_rel_width = c(3, 2, 2, 2),     text_background_color = color_matrix   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae14.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"page-setup","dir":"Articles","previous_headings":"","what":"Page setup","title":"Introduction to r2rtf","text":"total number rows page can controlled nrow argument rtf_page() function. Every lines counted including title, subline, header, body, footnote, source, extra rows. value nrow maximum number rows allowed one page, actual rows display can slightly smaller.","code":"tbl[1:50, ] %>%   rtf_page(nrow = 40) %>%   rtf_title(title = \"Adverse Events Example\") %>%   rtf_colheader(     colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",     col_rel_width = c(3, 1, 1, 1)   ) %>%   rtf_body(     col_rel_width = c(3, 1, 1, 1),     text_justification = c(\"l\", \"c\", \"c\", \"c\")   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae15.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"subline_by-feature","dir":"Articles","previous_headings":"","what":"subline_by feature","title":"Introduction to r2rtf","text":"Users can use subline_by argument rtf_body() function group table assigning subline_by variable. subject line displayed beginning page based variable provided subline_by. Different values subline_by broken different pages. example shows using treatment group subline_by variable.","code":"aegt5 <- r2rtf_adae %>%   group_by(TRTA, AEDECOD) %>%   summarise(Count = n_distinct(USUBJID)) %>%   filter(Count > 7) %>%   ungroup() %>%   arrange(TRTA, desc(Count))  head(aegt5) ## # A tibble: 6 × 3 ##   TRTA                 AEDECOD                   Count ##   <chr>                <chr>                     <int> ## 1 Placebo              DIARRHOEA                     9 ## 2 Placebo              ERYTHEMA                      9 ## 3 Placebo              PRURITUS                      8 ## 4 Xanomeline High Dose PRURITUS                     26 ## 5 Xanomeline High Dose APPLICATION SITE PRURITUS    22 ## 6 Xanomeline High Dose APPLICATION SITE ERYTHEMA    15 aegt5 %>%   rtf_title(title = \"Top Adverse Events by Treatment Group\") %>%   rtf_colheader(colheader = \"Adverse Events|Count\") %>%   rtf_body(subline_by = \"TRTA\") %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae16.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"page_by-feature","dir":"Articles","previous_headings":"","what":"page_by feature","title":"Introduction to r2rtf","text":"Users can use page_by argument rtf_body() function group/separate table single cell row assigned page_by variable’s value . row header generated beginning page_by group. new_page = TRUE, different values group_by broken different pages. Default FALSE. example showed using treatment group page_by variable.","code":"aegt5 %>%   rtf_title(title = \"Top Adverse Events by Treatment Group\") %>%   rtf_colheader(colheader = \"Adverse Events|Count\") %>%   rtf_body(     page_by = \"TRTA\",     new_page = TRUE   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae17.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"group_by-feature","dir":"Articles","previous_headings":"","what":"group_by feature","title":"Introduction to r2rtf","text":"Users can use group_by argument rtf_body() function display group variable. example shows using treatment group group_by variable.","code":"aegt5 %>%   rtf_title(title = \"Top Adverse Events by Treatment Group\") %>%   rtf_colheader(colheader = \"Treatment|Adverse Events|Count\") %>%   rtf_body(     group_by = \"TRTA\",     text_justification = c(\"l\", \"l\", \"c\")   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/intro-ae18.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/r2rtf.html","id":"figure","dir":"Articles","previous_headings":"","what":"Figure","title":"Introduction to r2rtf","text":"last example showed insert figure RTF document. workflow can summarized : Save figures PNG format. (e.g. using png() ggplot2::ggsave()). Read PNG files R binary file using rtf_read_figure(). Add optional features using rtf_title(), rtf_footnote(), rtf_source(). Set page figure options using rtf_figure(). Convert rtf encoding using rtf_encode(doc_type = \"figure\"). (Note: important set doc_type = \"figure\" default doc_type = \"table set tables). Write rtf file using write_rtf().","code":"pruritus <- r2rtf_adae %>%   filter(AEDECOD == \"PRURITUS\") %>%   group_by(TRTA, AEDECOD) %>%   summarise(Count = n_distinct(USUBJID))  fig <- ggplot(data = pruritus, aes(x = TRTA, y = Count)) +   xlab(\"\") +   geom_bar(stat = \"identity\")  fig filename <- \"fig/intro-fig1.png\" ggsave(filename, fig) ## Saving 7.29 x 4.51 in image  filename %>%   rtf_read_figure() %>%   rtf_title(\"Pruritus Frequency by Treatment Group\") %>%   rtf_footnote(\"footnote here\") %>%   rtf_source(\"[datasource: adam-adae]\") %>%   rtf_figure() %>%   rtf_encode(doc_type = \"figure\") %>%   write_rtf(\"rtf/intro-ae19.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-convert-format.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"File Format Conversion","text":"r2rtf experimental internal function r2rtf:::rtf_convert_format convert RTF format PDF, DOCX, HTML. feature requires LibreOffice >= 7.1 tested Linux environment. default, r2rtf:::rtf_convert_format convert RTF file PDF format. PDF file saved folder file name default. example , ae_example.pdf created folder. Multiple files can provided input. format argument allow use specify output format pdf, docx, html.","code":"r2rtf:::rtf_convert_format(input = \"rtf/ae_example.rtf\") r2rtf:::rtf_convert_format(input = list.files(\"rtf\", pattern = \"*.rtf\")) r2rtf:::rtf_convert_format(input = \"rtf/ae_example.rtf\", format = \"html\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-convert-format.html","id":"limitations","dir":"Articles","previous_headings":"Overview","what":"Limitations","title":"File Format Conversion","text":"one known limitation RTF file convert HTML files: “dash”, “small dash”, “dot dash”, “dot dot” border type supported Summary                 Border Type Using Top Border Border                 Type  single double dot dash small                 dash dot                 dash dot                 dot","code":""},{"path":"https://merck.github.io/r2rtf/articles/rtf-row.html","id":"border-type","dir":"Articles","previous_headings":"","what":"Border Type","title":"RTF Examples for Controlling Table Details","text":".rtf_row supports 8 different types border listed . border type can used define top, left, right bottom border types. example define different top border line. cell, top border left border defined cell. right border defined last column. bottom border defined last row. example show top border left border type used cell border single. last column use right border double. last row use bottom border dash line. example display table specific border type (.e. double line first last line blank middle) first last border whole table controlled border_first border_last argument rtf_page() border, controlled matrix. User can use single value, vector, matrix control border type. Specifically, vector transferred matrix row. Therefore, useful set columns type using vector.","code":"r2rtf:::border_type()$name ## [1] \"\"           \"single\"     \"double\"     \"dot\"        \"dash\"       ## [6] \"small dash\" \"dot dash\"   \"dot dot\" .n <- length(r2rtf:::border_type()$name) db <- data.frame(border_type = r2rtf:::border_type()$name) %>%   rtf_title(\"Summary of Border Type Using Top Border\") %>%   rtf_colheader(\"Border Type\") %>%   rtf_body(border_top = r2rtf:::border_type()$name)  db %>%   rtf_encode() %>%   write_rtf(\"rtf/border-type.rtf\") iris %>%   head() %>%   rtf_body(     as_colheader = FALSE,     border_top = \"dash\",     border_left = \"double\",     border_right = \"single\"   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/border-order.rtf\") rtf_db <- iris %>%   head() %>%   rtf_title(\"Border Using Double Line at First/Last Line\") %>%   rtf_colheader(\"Sepal Length | Sepal Width | Petal Length | Petal Width | Species\") %>%   rtf_body()   rtf_db %>%   rtf_encode() %>%   write_rtf(\"rtf/border-example.rtf\") attr(rtf_db, \"page\")$border_first ## [1] \"double\" attr(rtf_db, \"border_first\") ##      [,1]     [,2]     [,3]     [,4]     [,5]     ## [1,] \"single\" \"single\" \"single\" \"single\" \"single\" ## [2,] \"single\" \"single\" \"single\" \"single\" \"single\" ## [3,] \"single\" \"single\" \"single\" \"single\" \"single\" ## [4,] \"single\" \"single\" \"single\" \"single\" \"single\" ## [5,] \"single\" \"single\" \"single\" \"single\" \"single\" ## [6,] \"single\" \"single\" \"single\" \"single\" \"single\" rtf_db %>% attr(\"border_top\") ##      [,1] [,2] [,3] [,4] [,5] ## [1,] \"\"   \"\"   \"\"   \"\"   \"\"   ## [2,] \"\"   \"\"   \"\"   \"\"   \"\"   ## [3,] \"\"   \"\"   \"\"   \"\"   \"\"   ## [4,] \"\"   \"\"   \"\"   \"\"   \"\"   ## [5,] \"\"   \"\"   \"\"   \"\"   \"\"   ## [6,] \"\"   \"\"   \"\"   \"\"   \"\" matrix(r2rtf:::border_type()$name[1:5], nrow = 6, ncol = 5, byrow = TRUE) ##      [,1] [,2]     [,3]     [,4]  [,5]   ## [1,] \"\"   \"single\" \"double\" \"dot\" \"dash\" ## [2,] \"\"   \"single\" \"double\" \"dot\" \"dash\" ## [3,] \"\"   \"single\" \"double\" \"dot\" \"dash\" ## [4,] \"\"   \"single\" \"double\" \"dot\" \"dash\" ## [5,] \"\"   \"single\" \"double\" \"dot\" \"dash\" ## [6,] \"\"   \"single\" \"double\" \"dot\" \"dash\" rtf_db <- iris %>%   head() %>%   rtf_title(\"Left Border Defined by a Vector\") %>%   rtf_body(border_left = r2rtf:::border_type()$name[2:6])  rtf_db %>%   rtf_encode() %>%   write_rtf(\"rtf/border-vector.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-row.html","id":"cell-justification","dir":"Articles","previous_headings":"","what":"Cell Justification","title":"RTF Examples for Controlling Table Details","text":"table cell allow left, center right justified. cell also allow align decimal.","code":"r2rtf:::justification()[, 1:2] ##   type      name ## 1    l      left ## 2    c    center ## 3    r     right ## 4    d   decimal ## 5    j justified r2rtf:::justification()[, 1:2] %>%   rtf_body(text_justification = rep(r2rtf:::justification()$type, each = 2)) %>%   rtf_encode() %>%   write_rtf(\"rtf/justification-type.rtf\") db <- iris %>% mutate(Sepal.Length = formatC(Sepal.Length * 2, digits = 1, format = \"f\"))  db[, rep(1, 4)] %>%   head() %>%   rtf_body(text_justification = c(\"d\", \"l\", \"c\", \"r\")) %>%   rtf_encode() %>%   write_rtf(\"rtf/justification-number.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-row.html","id":"column-width","dir":"Articles","previous_headings":"","what":"Column Width","title":"RTF Examples for Controlling Table Details","text":"Column width determined width ratio row using col_rel_width. default width column. actual width calculate actual width col_total_width. default value col_total_width page_width divided 1.4. example shows default setting example customizes column width","code":"iris %>%   head() %>%   rtf_body(as_colheader = FALSE) %>%   rtf_encode() %>%   write_rtf(\"rtf/column-width-default.rtf\") iris %>%   head() %>%   rtf_body(col_rel_width = 1:ncol(iris), as_colheader = FALSE) %>%   rtf_encode() %>%   write_rtf(\"rtf/column-width-ratio.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-row.html","id":"text-appearance","dir":"Articles","previous_headings":"","what":"Text Appearance","title":"RTF Examples for Controlling Table Details","text":".rtf_row function allow bold, italics, strikethrough, underline combinations . example considers text format defined ","code":"r2rtf:::font_format()[, 1:2] ##   type        name ## 1           normal ## 2    b        bold ## 3    i     italics ## 4    u   underline ## 5    s      strike ## 6    ^ superscript ## 7    _   subscript fmt <- cbind(\"\", r2rtf:::font_format()$type) fmt ##      [,1] [,2] ## [1,] \"\"   \"\"   ## [2,] \"\"   \"b\"  ## [3,] \"\"   \"i\"  ## [4,] \"\"   \"u\"  ## [5,] \"\"   \"s\"  ## [6,] \"\"   \"^\"  ## [7,] \"\"   \"_\" r2rtf:::font_format()[, 1:2] %>%   rtf_body(text_format = fmt) %>%   rtf_encode() %>%   write_rtf(\"rtf/text-format.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-row.html","id":"text-font-size","dir":"Articles","previous_headings":"","what":"Text Font Size","title":"RTF Examples for Controlling Table Details","text":"Font size can defined cell.","code":"iris %>%   head() %>%   rtf_body(text_font_size = c(7:11), as_colheader = FALSE) %>%   rtf_encode() %>%   write_rtf(\"rtf/text-font-size.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-row.html","id":"color","dir":"Articles","previous_headings":"","what":"Color","title":"RTF Examples for Controlling Table Details","text":"text, border background color can set separately cell. important note cell can defined condition data. example, one can highlight p-value < 0.05 gold. example define text color column example define left border color column example define background color column","code":"iris %>%   head() %>%   rtf_body(     text_color = c(\"black\", \"red\", \"gold\", \"blue\", \"grey\"),     as_colheader = FALSE   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/color-text.rtf\") iris %>%   head() %>%   rtf_body(     border_color_left = c(\"black\", \"red\", \"gold\", \"blue\", \"grey\"),     as_colheader = FALSE   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/color-border.rtf\") iris %>%   head() %>%   rtf_body(     text_background_color = c(\"white\", \"red\", \"gold\", \"blue\", \"grey\"),     text_color = \"black\",     as_colheader = FALSE,   ) %>%   rtf_encode() %>%   write_rtf(\"rtf/color-background.rtf\")"},{"path":[]},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"paragraph-alignment","dir":"Articles","previous_headings":"Paragraph","what":"Paragraph Alignment","title":"RTF Examples for Controlling Text and Paragraph Details","text":"Paragraph alignment supports four types. example display text different alignment methods.","code":"r2rtf:::justification() %>% subset(type %in% c(\"l\", \"c\", \"r\", \"j\")) ##   type      name rtf_code_text rtf_code_row ## 1    l      left          \\\\ql       \\\\trql ## 2    c    center          \\\\qc       \\\\trqc ## 3    r     right          \\\\qr       \\\\trqr ## 5    j justified          \\\\qj res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text),   justification = c(\"l\", \"c\", \"r\", \"j\") ) r2rtf:::write_rtf_para(res, \"rtf/para-justification.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"indent","dir":"Articles","previous_headings":"Paragraph","what":"Indent","title":"RTF Examples for Controlling Text and Paragraph Details","text":"First line, left, right indent can controlled. One can also use negative number text “outdent”.","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text),   indent_first = c(1000, 0, -1000),   indent_left = c(500, -500),   indent_right = 500 ) r2rtf:::write_rtf_para(res, \"rtf/para-indent.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"line-space","dir":"Articles","previous_headings":"Paragraph","what":"Line Space","title":"RTF Examples for Controlling Text and Paragraph Details","text":"Different types line space can controlled. example show different line spaces paragraph.","code":"r2rtf:::spacing()[, 1:2] ##   type         name ## 1  1.0 single-space ## 2  2.0 double-space ## 3  1.5    1.5-space res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text),   space = c(1, 2, 1.5) ) r2rtf:::write_rtf_para(res, \"rtf/para-line-space.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"paragraph-space","dir":"Articles","previous_headings":"Paragraph","what":"Paragraph Space","title":"RTF Examples for Controlling Text and Paragraph Details","text":"","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text),   space_before = c(50, 180),   space_after = c(180, 50) ) r2rtf:::write_rtf_para(res, \"rtf/para-space.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"new-page","dir":"Articles","previous_headings":"Paragraph","what":"New Page","title":"RTF Examples for Controlling Text and Paragraph Details","text":"example add page break paragraphs.","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text)[1:2],   new_page = TRUE ) r2rtf:::write_rtf_para(res, \"rtf/para-page.rtf\")"},{"path":[]},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"font-size","dir":"Articles","previous_headings":"Text","what":"Font Size","title":"RTF Examples for Controlling Text and Paragraph Details","text":"","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text,   font_size = 8:12 )) r2rtf:::write_rtf_para(res, \"rtf/text-font-size-1.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"text-format","dir":"Articles","previous_headings":"Text","what":"Text Format","title":"RTF Examples for Controlling Text and Paragraph Details","text":"","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text,   format = c(\"b\", \"i\", \"bi\", \"^\", \"_\", \"u\", \"s\") )) ## Warning in matrix(text_rtf, nrow = nrow(text), ncol = ncol(text)): data length ## [7] is not a sub-multiple or multiple of the number of rows [5] r2rtf:::write_rtf_para(res, \"rtf/text-format-1.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"text-font-type","dir":"Articles","previous_headings":"Text","what":"Text Font Type","title":"RTF Examples for Controlling Text and Paragraph Details","text":"","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text,   font = 1:10 )) ## Warning in matrix(text_rtf, nrow = nrow(text), ncol = ncol(text)): data length ## differs from size of matrix: [10 != 5 x 1] r2rtf:::write_rtf_para(res, \"rtf/text-font-type.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"text-color","dir":"Articles","previous_headings":"Text","what":"Text Color","title":"RTF Examples for Controlling Text and Paragraph Details","text":"","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text,   color = c(\"red\", \"gold\", \"black\", \"orange\", \"blue\") )) r2rtf:::write_rtf_para(res, \"rtf/text-color.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"text-background-color","dir":"Articles","previous_headings":"Text","what":"Text Background Color","title":"RTF Examples for Controlling Text and Paragraph Details","text":"","code":"res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text,   color = \"white\",   background_color = c(\"red\", \"gold\", \"black\", \"orange\", \"blue\") )) r2rtf:::write_rtf_para(res, \"rtf/text-background-color.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"combine-text-in-different-format","dir":"Articles","previous_headings":"Text","what":"Combine Text in Different Format","title":"RTF Examples for Controlling Text and Paragraph Details","text":"example call rtf_text multiple times combine text. example call rtf_text one time combine text.","code":"res <- r2rtf:::rtf_paragraph(paste0(   r2rtf:::rtf_text(\"3.5\"),   r2rtf:::rtf_text(\"\\\\dagger\", format = \"^\"),   r2rtf:::rtf_text(\"\\\\line red \", color = \"red\"),   r2rtf:::rtf_text(\"highlight\", background_color = \"yellow\") )) r2rtf:::write_rtf_para(res, \"rtf/text-combine1.rtf\") text <- c(3.5, \"\\\\dagger\", \"\\\\line red \", \"highlight\") format <- c(\"\", \"^\", \"\", \"\") color <- c(\"black\", \"black\", \"red\", \"black\") background_color <- c(\"white\", \"white\", \"white\", \"yellow\")  res <- r2rtf:::rtf_paragraph(   paste(     r2rtf:::rtf_text(text,       format = format,       color = color,       background_color = background_color     ),     collapse = \"\"   ) ) r2rtf:::write_rtf_para(res, \"rtf/text-combine2.rtf\")"},{"path":"https://merck.github.io/r2rtf/articles/rtf-text.html","id":"inline-formatting","dir":"Articles","previous_headings":"Text","what":"Inline Formatting","title":"RTF Examples for Controlling Text and Paragraph Details","text":"example provide inline formatting options superscript subscript. important note location {} special character.","code":"text <- c(\"X{_1} = \\\\alpha{^2} + \\\\beta{^\\\\dagger}\") res <- r2rtf:::rtf_paragraph(r2rtf:::rtf_text(text)) r2rtf:::write_rtf_para(res, \"rtf/text-combine3.rtf\")"},{"path":"https://merck.github.io/r2rtf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yilong Zhang. Author. Siruo Wang. Author. Simiao Ye. Author. Fansen Kong. Author. Brian Lang. Author. Benjamin Wang. Author, maintainer. Nan Xiao. Contributor. Madhusudhan Ginnaram. Contributor. Ruchitbhai Patel. Contributor. Huei-Ling Chen. Contributor. Peikun Wu. Contributor. Uday Preetham Palukuru. Contributor. Daniel Woodie. Contributor. Sarad Nepal. Contributor. Jane Liao. Contributor. Jeff Cheng. Contributor. Yirong Cao. Contributor. Amin Shirazi. Contributor. Yihui Xie. Contributor. Günter Milde. Contributor.           Original author unimathsymbols.txt file Merck Sharp & Dohme Corp. Copyright holder.","code":""},{"path":"https://merck.github.io/r2rtf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang S, Ye S, Anderson KM, Zhang Y (2020). “r2rtf—R Package Produce Rich Text Format (RTF) Tables Figures.” PharmaSUG. https://pharmasug.org/proceedings/2020/DV/PharmaSUG-2020-DV-198.pdf.","code":"@InProceedings{,   title = {{r2rtf}---an {R} Package to Produce {Rich Text Format} ({RTF}) Tables and Figures},   author = {Siruo Wang and Simiao Ye and Keaven M Anderson and Yilong Zhang},   booktitle = {PharmaSUG},   year = {2020},   url = {https://pharmasug.org/proceedings/2020/DV/PharmaSUG-2020-DV-198.pdf}, }"},{"path":[]},{"path":"https://merck.github.io/r2rtf/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Easily Create Production-Ready Rich Text Format (RTF) Tables and Figures","text":"r2rtf R package create production-ready tables figures RTF format. package designed principles: Provide simple “verb” functions correspond component table, help translate data frame(s) table RTF file. Functions chainable pipes (%>%). Data manipulation analysis handled R packages, example, tidyverse. Minimize package dependency. R clinical study reports submission book provides tutorials using real world examples.","code":""},{"path":"https://merck.github.io/r2rtf/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Create Production-Ready Rich Text Format (RTF) Tables and Figures","text":"can install package via CRAN: , install GitHub:","code":"install.packages(\"r2rtf\") remotes::install_github(\"Merck/r2rtf\")"},{"path":"https://merck.github.io/r2rtf/index.html","id":"highlighted-features","dir":"","previous_headings":"","what":"Highlighted features","title":"Easily Create Production-Ready Rich Text Format (RTF) Tables and Figures","text":"R package r2rtf provides flexibility enable features : Create highly customized RTF tables figures ready production. Customized column header: split \"|\". Three required parameters output tables (data, filename, column relative width). Flexible detail control table structure. Border Type: single, double, dash, dot, etc. Alignment: left, right, center, decimal. Column width. Text appearance: bold, italics, strikethrough, underline combinations. Font size. Text border color (657 different colors named color() function). Special characters: character UTF-8 encoding (e.g., Greek, Symbol, Chinese, Japanese, Korean). Append several tables one file. Pagination. Built-raw data validation.","code":""},{"path":"https://merck.github.io/r2rtf/index.html","id":"simple-example","dir":"","previous_headings":"","what":"Simple example","title":"Easily Create Production-Ready Rich Text Format (RTF) Tables and Figures","text":"Examples","code":"library(dplyr) library(r2rtf)  head(iris) %>%   rtf_body() %>% # Step 1 Add attributes   rtf_encode() %>% # Step 2 Convert attributes to RTF encode   write_rtf(file = \"ex-tbl.rtf\") # Step 3 Write to a .rtf file"},{"path":"https://merck.github.io/r2rtf/index.html","id":"example-efficacy-table","dir":"","previous_headings":"","what":"Example efficacy table","title":"Easily Create Production-Ready Rich Text Format (RTF) Tables and Figures","text":"Source code","code":""},{"path":"https://merck.github.io/r2rtf/index.html","id":"example-safety-table","dir":"","previous_headings":"","what":"Example safety table","title":"Easily Create Production-Ready Rich Text Format (RTF) Tables and Figures","text":"Source code","code":""},{"path":"https://merck.github.io/r2rtf/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Easily Create Production-Ready Rich Text Format (RTF) Tables and Figures","text":"use software, please cite . Wang, S., Ye, S., Anderson, K., & Zhang, Y. (2020). r2rtf—R Package Produce Rich Text Format (RTF) Tables Figures. PharmaSUG. https://pharmasug.org/proceedings/2020/DV/PharmaSUG-2020-DV-198.pdf BibTeX entry LaTeX users ","code":"@inproceedings{wang2020r2rtf,   title     = {{r2rtf}---an {R} Package to Produce {Rich Text Format} ({RTF}) Tables and Figures},   author    = {Wang, Siruo and Ye, Simiao and Anderson, Keaven M and Zhang, Yilong},   booktitle = {PharmaSUG},   year      = {2020},   url       = {https://pharmasug.org/proceedings/2020/DV/PharmaSUG-2020-DV-198.pdf} }"},{"path":"https://merck.github.io/r2rtf/reference/assemble_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble Multiple RTF Table Listing and Figure Into One Word Document — assemble_docx","title":"Assemble Multiple RTF Table Listing and Figure Into One Word Document — assemble_docx","text":"function assemble multiple RTF table, listing, figures one document Microsoft Word (.e., docx).","code":""},{"path":"https://merck.github.io/r2rtf/reference/assemble_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble Multiple RTF Table Listing and Figure Into One Word Document — assemble_docx","text":"","code":"assemble_docx(input, output, landscape = FALSE)"},{"path":"https://merck.github.io/r2rtf/reference/assemble_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble Multiple RTF Table Listing and Figure Into One Word Document — assemble_docx","text":"input Character vector file path. output Character string output file path. landscape Logical vector determine page direction.","code":""},{"path":"https://merck.github.io/r2rtf/reference/assemble_docx.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Assemble Multiple RTF Table Listing and Figure Into One Word Document — assemble_docx","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/assemble_docx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assemble Multiple RTF Table Listing and Figure Into One Word Document — assemble_docx","text":"","code":"library(officer) library(magrittr)  file <- replicate(2, tempfile(fileext = \".rtf\")) file1 <- head(iris) %>%   rtf_body() %>%   rtf_encode() %>%   write_rtf(file[1]) file2 <- head(cars) %>%   rtf_page(orientation = \"landscape\") %>%   rtf_body() %>%   rtf_encode() %>%   write_rtf(file[2]) output <- tempfile(fileext = \".docx\")  assemble_docx(   input = file,   output = output )"},{"path":"https://merck.github.io/r2rtf/reference/assemble_rtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble Multiple RTF Table Listing and Figure Into One RTF Document — assemble_rtf","title":"Assemble Multiple RTF Table Listing and Figure Into One RTF Document — assemble_rtf","text":"function assemble multiple RTF table, listing, figures one document RTF file.","code":""},{"path":"https://merck.github.io/r2rtf/reference/assemble_rtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble Multiple RTF Table Listing and Figure Into One RTF Document — assemble_rtf","text":"","code":"assemble_rtf(input, output, landscape = FALSE)"},{"path":"https://merck.github.io/r2rtf/reference/assemble_rtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble Multiple RTF Table Listing and Figure Into One RTF Document — assemble_rtf","text":"input Character vector file path. output Character string output file path. landscape Logical value determine page direction.","code":""},{"path":"https://merck.github.io/r2rtf/reference/assemble_rtf.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Assemble Multiple RTF Table Listing and Figure Into One RTF Document — assemble_rtf","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/assemble_rtf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assemble Multiple RTF Table Listing and Figure Into One RTF Document — assemble_rtf","text":"","code":"library(magrittr)  file <- replicate(2, tempfile(fileext = \".rtf\")) file1 <- head(iris) %>%   rtf_body() %>%   rtf_encode() %>%   write_rtf(file[1]) file2 <- head(cars) %>%   rtf_page(orientation = \"landscape\") %>%   rtf_body() %>%   rtf_encode() %>%   write_rtf(file[2]) output <- tempfile(fileext = \".rtf\")  assemble_rtf(   input = file,   output = output )"},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_HAMD17.html","id":null,"dir":"Reference","previous_headings":"","what":"An Efficacy Clinical Trial Data to Evaluate a Drug to Reduce Lower Back Pain — r2rtf_HAMD17","title":"An Efficacy Clinical Trial Data to Evaluate a Drug to Reduce Lower Back Pain — r2rtf_HAMD17","text":"dataset prepared Drug Information Association scientific working group investigate drug reduce lower back pain.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_HAMD17.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An Efficacy Clinical Trial Data to Evaluate a Drug to Reduce Lower Back Pain — r2rtf_HAMD17","text":"","code":"r2rtf_HAMD17"},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_HAMD17.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An Efficacy Clinical Trial Data to Evaluate a Drug to Reduce Lower Back Pain — r2rtf_HAMD17","text":"data frame 831 rows 6 variables.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_HAMD17.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An Efficacy Clinical Trial Data to Evaluate a Drug to Reduce Lower Back Pain — r2rtf_HAMD17","text":"https://www.lshtm.ac.uk/research/centres-projects-groups/missing-data#dia-missing-data","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_HAMD17.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An Efficacy Clinical Trial Data to Evaluate a Drug to Reduce Lower Back Pain — r2rtf_HAMD17","text":"Definition variable can found https://www.lshtm.ac.uk/research/centres-projects-groups/missing-data#dia-missing-data","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adae.html","id":null,"dir":"Reference","previous_headings":"","what":"An Adverse Event Dataset — r2rtf_adae","title":"An Adverse Event Dataset — r2rtf_adae","text":"dataset containing adverse event information clinical trial following CDISC ADaM standard.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An Adverse Event Dataset — r2rtf_adae","text":"","code":"r2rtf_adae"},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adae.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An Adverse Event Dataset — r2rtf_adae","text":"data frame 1191 rows 55 variables.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adae.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An Adverse Event Dataset — r2rtf_adae","text":"https://github.com/phuse-org/phuse-scripts/tree/master/data/adam/cdisc","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adae.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An Adverse Event Dataset — r2rtf_adae","text":"Definition variable can found https://github.com/phuse-org/phuse-scripts/tree/master/data/adam/cdisc","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adsl.html","id":null,"dir":"Reference","previous_headings":"","what":"A Subject Level Demographic Dataset — r2rtf_adsl","title":"A Subject Level Demographic Dataset — r2rtf_adsl","text":"dataset containing demographic information clinical trial following CDISC ADaM standard.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Subject Level Demographic Dataset — r2rtf_adsl","text":"","code":"r2rtf_adsl"},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adsl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A Subject Level Demographic Dataset — r2rtf_adsl","text":"data frame 254 rows 51 variables.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adsl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A Subject Level Demographic Dataset — r2rtf_adsl","text":"https://github.com/phuse-org/phuse-scripts/tree/master/data/adam/cdisc","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_adsl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Subject Level Demographic Dataset — r2rtf_adsl","text":"Definition variable can found https://github.com/phuse-org/phuse-scripts/tree/master/data/adam/cdisc","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl1.html","id":null,"dir":"Reference","previous_headings":"","what":"Within Group Results from an ANCOVA Model — r2rtf_tbl1","title":"Within Group Results from an ANCOVA Model — r2rtf_tbl1","text":"dataset containing within group results ANCOVA model.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Within Group Results from an ANCOVA Model — r2rtf_tbl1","text":"","code":"r2rtf_tbl1"},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Within Group Results from an ANCOVA Model — r2rtf_tbl1","text":"data frame 2 rows 8 variables.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl2.html","id":null,"dir":"Reference","previous_headings":"","what":"Between Group Results from an ANCOVA Model — r2rtf_tbl2","title":"Between Group Results from an ANCOVA Model — r2rtf_tbl2","text":"dataset containing group results ANCOVA model.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Between Group Results from an ANCOVA Model — r2rtf_tbl2","text":"","code":"r2rtf_tbl2"},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Between Group Results from an ANCOVA Model — r2rtf_tbl2","text":"data frame 1 row 3 variables.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl3.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Square Error from an ANCOVA model — r2rtf_tbl3","title":"Root Mean Square Error from an ANCOVA model — r2rtf_tbl3","text":"dataset containing root mean square error ANCOVA model.","code":""},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Square Error from an ANCOVA model — r2rtf_tbl3","text":"","code":"r2rtf_tbl3"},{"path":"https://merck.github.io/r2rtf/reference/r2rtf_tbl3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Root Mean Square Error from an ANCOVA model — r2rtf_tbl3","text":"data frame 1 row 1 variable.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Table Body Attributes to the Table — rtf_body","title":"Add Table Body Attributes to the Table — rtf_body","text":"Add Table Body Attributes Table","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Table Body Attributes to the Table — rtf_body","text":"","code":"rtf_body(   tbl,   col_rel_width = rep(1, ncol(tbl)),   as_colheader = TRUE,   border_left = \"single\",   border_right = \"single\",   border_top = NULL,   border_bottom = NULL,   border_first = \"single\",   border_last = \"single\",   border_color_left = NULL,   border_color_right = NULL,   border_color_top = NULL,   border_color_bottom = NULL,   border_color_first = NULL,   border_color_last = NULL,   border_width = 15,   cell_height = 0.15,   cell_justification = \"c\",   cell_vertical_justification = \"top\",   cell_nrow = NULL,   text_font = 1,   text_format = NULL,   text_font_size = 9,   text_color = NULL,   text_background_color = NULL,   text_justification = NULL,   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_space = 1,   text_space_before = 15,   text_space_after = 15,   text_convert = TRUE,   group_by = NULL,   page_by = NULL,   new_page = FALSE,   pageby_header = TRUE,   pageby_row = \"column\",   subline_by = NULL,   last_row = TRUE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Table Body Attributes to the Table — rtf_body","text":"tbl data frame. col_rel_width Column relative width vector e.g. c(2,1,1) refers 2:1:1. Default NULL equal column width. as_colheader boolean value indicate whether add default column header table. Default TRUE use data frame column names column header. border_left Left border type. vary left border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_right Right border type. vary right border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_top Top border type. vary top border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). first row table page, top border set \"double\" otherwise border set \"single\". possible input can found r2rtf:::border_type()$name. border_bottom Bottom border type. vary bottom border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_first First top border type whole table. possible input can found r2rtf:::border_type()$name. border_last Last bottom border type whole table. possible input can found r2rtf:::border_type()$name. border_color_left Left border color type. Default NULL black. vary left border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_right Right border color type. Default NULL black. vary right border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_top Top border color type. Default NULL black. vary top border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_bottom Bottom border color type. Default NULL black. vary bottom border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_first First top border color type whole table. Default NULL black. possible input can found grDevices::colors(). border_color_last Last bottom border color type whole table. Default NULL black. possible input can found grDevices::colors(). border_width Border width twips. Default 15 0.0104 inch. cell_height Cell height inches. Default 0.15 0.15 inch. cell_justification Justification type cell. possible input can found r2rtf:::justification()$type. cell_vertical_justification Vertical justification type cell. possible input can found r2rtf:::vertical_justification()$type. cell_nrow Number rows required cell. text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_convert logical value convert special characters. group_by character vector variable names tbl. page_by Column names character vector group table sections. new_page boolean value indicate whether separate grouped table pages sections. Default FALSE. pageby_header boolean value display pageby header beginning page. Default TRUE. value FALSE, pageby header displayed first page pageby group. special pageby value \"-----\" avoid displaying pageby header group. pageby_row character vector location page_by variable. Possible input 'column' 'first_row'. subline_by Column names character vector subline table sections. last_row boolean value indicate whether table contains last row final table.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Table Body Attributes to the Table — rtf_body","text":"data frame tbl additional attributes table body","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_body.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add Table Body Attributes to the Table — rtf_body","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_body.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Table Body Attributes to the Table — rtf_body","text":"","code":"library(dplyr) # required to run examples #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(r2rtf_tbl1) r2rtf_tbl1 %>%   rtf_body(     col_rel_width = c(3, 1, 3, 1, 3, 1, 3, 5),     text_justification = c(\"l\", rep(\"c\", 7)),     last_row = FALSE   ) %>%   attributes() #> $names #> [1] \"Trt\"   \"N1\"    \"Mean1\" \"N2\"    \"Mean2\" \"N3\"    \"Mean3\" \"CI\"    #>  #> $row.names #> [1] 1 2 #>  #> $class #> [1] \"data.frame\" \"rtf_text\"   \"rtf_border\" #>  #> $page #> $page$width #> [1] 8.5 #>  #> $page$height #> [1] 11 #>  #> $page$orientation #> [1] \"portrait\" #>  #> $page$margin #> [1] 1.25000 1.00000 1.75000 1.25000 1.75000 1.00625 #>  #> $page$nrow #> [1] 40 #>  #> $page$col_width #> [1] 6.25 #>  #> $page$border_first #> [1] \"double\" #>  #> $page$border_last #> [1] \"double\" #>  #> $page$page_title #> [1] \"all\" #>  #> $page$page_footnote #> [1] \"last\" #>  #> $page$page_source #> [1] \"last\" #>  #> $page$use_color #> [1] FALSE #>  #> $page$use_i18n #> [1] FALSE #>  #>  #> $rtf_colheader #> $rtf_colheader[[1]] #>    X1 X2    X3 X4    X5 X6    X7 X8 #> 1 Trt N1 Mean1 N2 Mean2 N3 Mean3 CI #>  #>  #> $text_font #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    1    1    1    1    1    1    1    1 #> [2,]    1    1    1    1    1    1    1    1 #>  #> $text_font_size #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    9    9    9    9    9    9    9    9 #> [2,]    9    9    9    9    9    9    9    9 #>  #> $text_justification #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,] \"l\"  \"c\"  \"c\"  \"c\"  \"c\"  \"c\"  \"c\"  \"c\"  #> [2,] \"l\"  \"c\"  \"c\"  \"c\"  \"c\"  \"c\"  \"c\"  \"c\"  #>  #> $text_space #> [1] 1 #>  #> $text_space_before #> [1] 15 #>  #> $text_space_after #> [1] 15 #>  #> $text_indent_first #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    0    0    0    0    0    0    0    0 #> [2,]    0    0    0    0    0    0    0    0 #>  #> $text_indent_left #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    0    0    0    0    0    0    0    0 #> [2,]    0    0    0    0    0    0    0    0 #>  #> $text_indent_right #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    0    0    0    0    0    0    0    0 #> [2,]    0    0    0    0    0    0    0    0 #>  #> $text_new_page #> [1] FALSE #>  #> $text_hyphenation #> [1] TRUE #>  #> $text_convert #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #> [2,] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  #> $use_i18n #> [1] FALSE #>  #> $strwidth #>           [,1]  [,2]      [,3]  [,4]    [,5]  [,6]    [,7]      [,8] #> [1,] 0.5772569 0.125 0.5520833 0.125 0.53125 0.125 0.53125 0.8958333 #> [2,] 0.3921441 0.125 0.5520833 0.125 0.53125 0.125 0.53125 0.9583333 #>  #> $use_color #> [1] FALSE #>  #> $border_top #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,] \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   #> [2,] \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   #>  #> $border_left #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     #> [1,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #> [2,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #>  #> $border_right #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     #> [1,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #> [2,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #>  #> $border_bottom #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,] \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   #> [2,] \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   \"\"   #>  #> $border_first #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     #> [1,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #> [2,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #>  #> $border_last #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]     #> [1,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #> [2,] \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" \"single\" #>  #> $border_width #> [1] 15 #>  #> $cell_height #> [1] 0.15 #>  #> $cell_justification #> [1] \"c\" #>  #> $cell_vertical_justification #> [1] \"top\" #>  #> $col_rel_width #> [1] 3 1 3 1 3 1 3 5 #>  #> $last_row #> [1] FALSE #>  #> $rtf_by_subline #> $rtf_by_subline$new_page #> [1] FALSE #>  #> $rtf_by_subline$by_var #> NULL #>  #> $rtf_by_subline$id #> NULL #>  #>  #> $rtf_pageby #> $rtf_pageby$new_page #> [1] FALSE #>  #> $rtf_pageby$by_var #> NULL #>  #> $rtf_pageby$id #> NULL #>  #>"},{"path":"https://merck.github.io/r2rtf/reference/rtf_colheader.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Column Header Attributes to Table — rtf_colheader","title":"Add Column Header Attributes to Table — rtf_colheader","text":"Add Column Header Attributes Table","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_colheader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Column Header Attributes to Table — rtf_colheader","text":"","code":"rtf_colheader(   tbl,   colheader = NULL,   col_rel_width = NULL,   border_left = \"single\",   border_right = \"single\",   border_top = \"single\",   border_bottom = \"\",   border_color_left = NULL,   border_color_right = NULL,   border_color_top = NULL,   border_color_bottom = NULL,   border_width = 15,   cell_height = 0.15,   cell_justification = \"c\",   cell_vertical_justification = \"bottom\",   cell_nrow = NULL,   text_font = 1,   text_format = NULL,   text_font_size = 9,   text_color = NULL,   text_background_color = NULL,   text_justification = \"c\",   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_space = 1,   text_space_before = 15,   text_space_after = 15,   text_hyphenation = TRUE,   text_convert = TRUE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_colheader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Column Header Attributes to Table — rtf_colheader","text":"tbl data frame. colheader character string uses \" | \" separate column names. Default NULL blank column header. col_rel_width Column relative width vector e.g. c(2,1,1) refers 2:1:1. Default NULL equal column width. border_left Left border type. vary left border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_right Right border type. vary right border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_top Top border type. vary top border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). first row table page, top border set \"double\" otherwise border set \"single\". possible input can found r2rtf:::border_type()$name. border_bottom Bottom border type. vary bottom border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_color_left Left border color type. Default NULL black. vary left border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_right Right border color type. Default NULL black. vary right border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_top Top border color type. Default NULL black. vary top border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_bottom Bottom border color type. Default NULL black. vary bottom border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_width Border width twips. Default 15 0.0104 inch. cell_height Cell height inches. Default 0.15 0.15 inch. cell_justification Justification type cell. possible input can found r2rtf:::justification()$type. cell_vertical_justification Vertical justification type cell. possible input can found r2rtf:::vertical_justification()$type. cell_nrow Number rows required cell. text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_hyphenation logical value control whether display text linked hyphenation. text_convert logical value convert special characters.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_colheader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Column Header Attributes to Table — rtf_colheader","text":"data frame tbl additional attributes table column header.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_colheader.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add Column Header Attributes to Table — rtf_colheader","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_colheader.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Column Header Attributes to Table — rtf_colheader","text":"","code":"library(dplyr) # required to run examples data(r2rtf_tbl1) r2rtf_tbl1 %>%   rtf_colheader(     colheader = \"Treatment | N | Mean (SD) | N | Mean (SD) | N |                   Mean (SD) | LS Mean (95% CI)\\\\dagger\",     text_format = c(\"b\", \"\", \"u\", \"\", \"u\", \"\", \"u\", \"i\")   ) %>%   attr(\"rtf_colheader\") #> [[1]] #>          X1 X2        X3 X4        X5 X6        X7                       X8 #> 1 Treatment  N Mean (SD)  N Mean (SD)  N Mean (SD) LS Mean (95% CI)\\\\dagger #>"},{"path":"https://merck.github.io/r2rtf/reference/rtf_encode.html","id":null,"dir":"Reference","previous_headings":"","what":"Render to RTF Encoding — rtf_encode","title":"Render to RTF Encoding — rtf_encode","text":"function extracts table/figure attributes render RTF encoding ready save RTF file.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_encode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render to RTF Encoding — rtf_encode","text":"","code":"rtf_encode(   tbl,   doc_type = \"table\",   page_title = \"all\",   page_footnote = \"last\",   page_source = \"last\",   verbose = FALSE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_encode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render to RTF Encoding — rtf_encode","text":"tbl data frame table list binary string figure. doc_type doc_type input, default table. page_title character title displaying location. Possible values \"first\", \"last\" \"\". page_footnote character title displaying location. Possible values \"first\", \"last\" \"\". page_source character title displaying location. Possible values \"first\", \"last\" \"\". verbose boolean value return details RTF encoding.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_encode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render to RTF Encoding — rtf_encode","text":"","code":"For \\code{rtf_encode}, a vector of RTF code. For \\code{write_rtf}, no return value."},{"path":"https://merck.github.io/r2rtf/reference/rtf_encode.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Render to RTF Encoding — rtf_encode","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_encode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render to RTF Encoding — rtf_encode","text":"","code":"library(dplyr) # required to run examples  # Example 1 head(iris) %>%   rtf_body() %>%   rtf_encode() %>%   write_rtf(file = file.path(tempdir(), \"table1.rtf\"))  # Example 2 if (FALSE) { # \\dontrun{ library(dplyr) # required to run examples file <- file.path(tempdir(), \"figure1.png\") png(file) plot(1:10) dev.off()  # Read in PNG file in binary format rtf_read_figure(file) %>%   rtf_figure() %>%   rtf_encode(doc_type = \"figure\") %>%   write_rtf(file = file.path(tempdir(), \"figure1.rtf\")) } # } # Example 3  ## convert tbl_1 to the table body. Add title, subtitle, two table ## headers, and footnotes to the table body. data(r2rtf_tbl2) ## convert r2rtf_tbl2 to the table body. Add a table column header to table body. t2 <- r2rtf_tbl2 %>%   rtf_colheader(     colheader = \"Pairwise Comparison |                    Difference in LS Mean(95% CI)\\\\dagger | p-Value\",     text_justification = c(\"l\", \"c\", \"c\")   ) %>%   rtf_body(     col_rel_width = c(8, 7, 5),     text_justification = c(\"l\", \"c\", \"c\"),     last_row = FALSE   ) # concatenate a list of table and save to an RTF file t2 %>%   rtf_encode() %>%   write_rtf(file.path(tempdir(), \"table2.rtf\"))"},{"path":"https://merck.github.io/r2rtf/reference/rtf_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Figure Attributes — rtf_figure","title":"Add Figure Attributes — rtf_figure","text":"Add Figure Attributes","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Figure Attributes — rtf_figure","text":"","code":"rtf_figure(tbl, fig_width = 5, fig_height = 5, fig_format = NULL)"},{"path":"https://merck.github.io/r2rtf/reference/rtf_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Figure Attributes — rtf_figure","text":"tbl data frame. fig_width width figures inch fig_height height figures inch fig_format figure format defined r2rtf:::fig_format()","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_figure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Figure Attributes — rtf_figure","text":"data frame tbl additional attributes figure body","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_figure.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add Figure Attributes — rtf_figure","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_figure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Figure Attributes — rtf_figure","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) # required to run examples file <- file.path(tempdir(), \"figure1.png\") png(file) plot(1:10) dev.off()  # Read in PNG file in binary format rtf_read_figure(file) %>%   rtf_figure() %>%   attributes() } # }"},{"path":"https://merck.github.io/r2rtf/reference/rtf_footnote.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Footnote Attributes to Table — rtf_footnote","title":"Add Footnote Attributes to Table — rtf_footnote","text":"Add Footnote Attributes Table","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_footnote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Footnote Attributes to Table — rtf_footnote","text":"","code":"rtf_footnote(   tbl,   footnote = \"\",   border_left = \"single\",   border_right = \"single\",   border_top = \"\",   border_bottom = \"single\",   border_color_left = NULL,   border_color_right = NULL,   border_color_top = NULL,   border_color_bottom = NULL,   border_width = 15,   cell_height = 0.15,   cell_justification = \"c\",   cell_vertical_justification = \"top\",   cell_nrow = NULL,   text_font = 1,   text_format = NULL,   text_font_size = 9,   text_color = NULL,   text_background_color = NULL,   text_justification = \"l\",   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_indent_reference = \"table\",   text_space = 1,   text_space_before = 15,   text_space_after = 15,   text_convert = TRUE,   as_table = TRUE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_footnote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Footnote Attributes to Table — rtf_footnote","text":"tbl data frame. footnote vector character footnote text. border_left Left border type. vary left border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_right Right border type. vary right border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_top Top border type. vary top border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). first row table page, top border set \"double\" otherwise border set \"single\". possible input can found r2rtf:::border_type()$name. border_bottom Bottom border type. vary bottom border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_color_left Left border color type. Default NULL black. vary left border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_right Right border color type. Default NULL black. vary right border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_top Top border color type. Default NULL black. vary top border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_bottom Bottom border color type. Default NULL black. vary bottom border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_width Border width twips. Default 15 0.0104 inch. cell_height Cell height inches. Default 0.15 0.15 inch. cell_justification Justification type cell. possible input can found r2rtf:::justification()$type. cell_vertical_justification Vertical justification type cell. possible input can found r2rtf:::vertical_justification()$type. cell_nrow Number rows required cell. text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_indent_reference reference start point text indent. Accept table page_margin text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_convert logical value convert special characters. as_table logical value display table.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_footnote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Footnote Attributes to Table — rtf_footnote","text":"data frame tbl additional attributes table footnote","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_footnote.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add Footnote Attributes to Table — rtf_footnote","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_footnote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Footnote Attributes to Table — rtf_footnote","text":"","code":"library(dplyr) # required to run examples data(r2rtf_tbl1) r2rtf_tbl1 %>%   rtf_footnote(\"\\\\dagger Based on an ANCOVA model.\") %>%   attr(\"rtf_footnote\") #> [1] \"\\\\dagger Based on an ANCOVA model.\" #> attr(,\"text_font\") #> [1] 1 #> attr(,\"text_font_size\") #> [1] 9 #> attr(,\"text_justification\") #> [1] \"l\" #> attr(,\"text_space\") #> [1] 1 #> attr(,\"text_space_before\") #> [1] 15 #> attr(,\"text_space_after\") #> [1] 15 #> attr(,\"text_indent_first\") #> [1] 0 #> attr(,\"text_indent_left\") #> [1] 0 #> attr(,\"text_indent_right\") #> [1] 0 #> attr(,\"text_new_page\") #> [1] FALSE #> attr(,\"text_hyphenation\") #> [1] TRUE #> attr(,\"text_convert\") #> [1] TRUE #> attr(,\"use_i18n\") #> [1] FALSE #> attr(,\"strwidth\") #> [1] 1.928602 #> attr(,\"use_color\") #> [1] FALSE #> attr(,\"class\") #> [1] \"character\"  \"rtf_text\"   \"rtf_border\" #> attr(,\"border_top\") #> [1] \"\" #> attr(,\"border_left\") #> [1] \"single\" #> attr(,\"border_right\") #> [1] \"single\" #> attr(,\"border_bottom\") #> [1] \"single\" #> attr(,\"border_width\") #> [1] 15 #> attr(,\"cell_height\") #> [1] 0.15 #> attr(,\"cell_justification\") #> [1] \"c\" #> attr(,\"cell_vertical_justification\") #> [1] \"top\" #> attr(,\"as_table\") #> [1] TRUE #> attr(,\"col_rel_width\") #> [1] 1"},{"path":"https://merck.github.io/r2rtf/reference/rtf_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Add RTF File Page Information — rtf_page","title":"Add RTF File Page Information — rtf_page","text":"Add RTF File Page Information","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add RTF File Page Information — rtf_page","text":"","code":"rtf_page(   tbl,   orientation = \"portrait\",   width = ifelse(orientation == \"portrait\", 8.5, 11),   height = ifelse(orientation == \"portrait\", 11, 8.5),   margin = set_margin(\"wma\", orientation),   nrow = ifelse(orientation == \"portrait\", 40, 24),   border_first = \"double\",   border_last = \"double\",   border_color_first = NULL,   border_color_last = NULL,   col_width = width - ifelse(orientation == \"portrait\", 2.25, 2.5),   use_color = FALSE,   use_i18n = FALSE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add RTF File Page Information — rtf_page","text":"tbl data frame. orientation Orientation 'portrait' 'landscape'. width numeric value page width inches. height numeric value page width inches. margin numeric vector length 6 page margin. value set left, right, top, bottom, header footer margin order. Default value depends page orientation set r2rtf:::set_margin(\"wma\", orientation) nrow Number rows page. border_first First top border type whole table. possible input can found r2rtf:::border_type()$name. border_last Last bottom border type whole table. possible input can found r2rtf:::border_type()$name. border_color_first First top border color type whole table. Default NULL black. possible input can found grDevices::colors(). border_color_last Last bottom border color type whole table. Default NULL black. possible input can found grDevices::colors(). col_width numeric value total column width inch. Default width - ifelse(orientation == \"portrait\", 2, 2.5) use_color logical value use color output. use_i18n logical value enable internationalization fonts (e.g., SimSun Chinese). Default FALSE.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add RTF File Page Information — rtf_page","text":"data frame tbl additional attributes page features","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_page.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add RTF File Page Information — rtf_page","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add RTF File Page Information — rtf_page","text":"","code":"library(dplyr) # required to run examples data(r2rtf_tbl1) r2rtf_tbl1 %>%   rtf_page() %>%   attr(\"page\") #> $width #> [1] 8.5 #>  #> $height #> [1] 11 #>  #> $orientation #> [1] \"portrait\" #>  #> $margin #> [1] 1.25000 1.00000 1.75000 1.25000 1.75000 1.00625 #>  #> $nrow #> [1] 40 #>  #> $col_width #> [1] 6.25 #>  #> $border_first #> [1] \"double\" #>  #> $border_last #> [1] \"double\" #>  #> $page_title #> [1] \"all\" #>  #> $page_footnote #> [1] \"last\" #>  #> $page_source #> [1] \"last\" #>  #> $use_color #> [1] FALSE #>  #> $use_i18n #> [1] FALSE #>"},{"path":"https://merck.github.io/r2rtf/reference/rtf_page_footer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add RTF Page Footer Information — rtf_page_footer","title":"Add RTF Page Footer Information — rtf_page_footer","text":"Add RTF Page Footer Information","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_page_footer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add RTF Page Footer Information — rtf_page_footer","text":"","code":"rtf_page_footer(   tbl,   text,   text_font = 1,   text_format = NULL,   text_font_size = 12,   text_color = NULL,   text_background_color = NULL,   text_justification = \"c\",   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_space = 1,   text_space_before = 15,   text_space_after = 15,   text_convert = TRUE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_page_footer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add RTF Page Footer Information — rtf_page_footer","text":"tbl data frame. text character string. text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_convert logical value convert special characters.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_page_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Add RTF Page Header Information — rtf_page_header","title":"Add RTF Page Header Information — rtf_page_header","text":"Add RTF Page Header Information","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_page_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add RTF Page Header Information — rtf_page_header","text":"","code":"rtf_page_header(   tbl,   text = \"Page \\\\pagenumber of \\\\pagefield\",   text_font = 1,   text_format = NULL,   text_font_size = 12,   text_color = NULL,   text_background_color = NULL,   text_justification = \"r\",   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_space = 1,   text_space_before = 15,   text_space_after = 15,   text_convert = TRUE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_page_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add RTF Page Header Information — rtf_page_header","text":"tbl data frame. text character string. text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_convert logical value convert special characters.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Figures into Binary Files — rtf_read_figure","title":"Read Figures into Binary Files — rtf_read_figure","text":"Supported format listed r2rtf:::fig_format().","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Figures into Binary Files — rtf_read_figure","text":"","code":"rtf_read_figure(file)"},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Figures into Binary Files — rtf_read_figure","text":"file character vector figure file paths.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_figure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Figures into Binary Files — rtf_read_figure","text":"list binary data vector returned readBin","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_figure.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Read Figures into Binary Files — rtf_read_figure","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_figure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Figures into Binary Files — rtf_read_figure","text":"","code":"if (FALSE) { # \\dontrun{  # Read in PNG file in binary format file <- tempfile(\"figure\", fileext = \".png\") png(file) plot(1:10) dev.off()   rtf_read_figure(file)  # Read in EMF file in binary format library(devEMF) file <- tempfile(\"figure\", fileext = \".emf\") emf(file) plot(1:10) dev.off()  rtf_read_figure(file) } # }"},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PNG Figures into Binary Files — rtf_read_png","title":"Read PNG Figures into Binary Files — rtf_read_png","text":"Read PNG Figures Binary Files","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PNG Figures into Binary Files — rtf_read_png","text":"","code":"rtf_read_png(file)"},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PNG Figures into Binary Files — rtf_read_png","text":"file character vector PNG file paths.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PNG Figures into Binary Files — rtf_read_png","text":"list binary data vector returned readBin","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_read_png.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Read PNG Figures into Binary Files — rtf_read_png","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_rich_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Text to Formatted RTF Encode — rtf_rich_text","title":"Text to Formatted RTF Encode — rtf_rich_text","text":"Text Formatted RTF Encode","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_rich_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text to Formatted RTF Encode — rtf_rich_text","text":"","code":"rtf_rich_text(   text,   theme = list(.emph = list(format = \"i\"), .strong = list(format = \"b\")) )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_rich_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text to Formatted RTF Encode — rtf_rich_text","text":"text Plain text. theme Named list defining themes tags. See rtf_text() details possible formatting.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_rich_text.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Text to Formatted RTF Encode — rtf_rich_text","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_rich_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text to Formatted RTF Encode — rtf_rich_text","text":"","code":"rtf_rich_text(   text = paste(     \"This is {.emph important}.\",     \"This is {.strong relevant}.\", \"This is {.zebra ZEBRA}.\"   ),   theme = list(     .emph = list(format = \"i\"),     .strong = list(format = \"b\"),     .zebra = list(color = \"white\", background_color = \"black\")   ) ) #>      [,1]                                                                                                                                            #> [1,] \"\\\\fs24{\\\\f0 This is \\\\fs24{\\\\f0\\\\i important}. This is \\\\fs24{\\\\f0\\\\b relevant}. This is \\\\fs24{\\\\f0\\\\cf1\\\\chshdng0\\\\chcbpat24\\\\cb24 ZEBRA}.}\""},{"path":"https://merck.github.io/r2rtf/reference/rtf_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Data Source Attributes to the Table — rtf_source","title":"Add Data Source Attributes to the Table — rtf_source","text":"Add Data Source Attributes Table","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Data Source Attributes to the Table — rtf_source","text":"","code":"rtf_source(   tbl,   source = \"\",   border_left = \"single\",   border_right = \"single\",   border_top = \"\",   border_bottom = \"single\",   border_color_left = NULL,   border_color_right = NULL,   border_color_top = NULL,   border_color_bottom = NULL,   border_width = 15,   cell_height = 0.15,   cell_justification = \"c\",   cell_vertical_justification = \"top\",   cell_nrow = NULL,   text_font = 1,   text_format = NULL,   text_font_size = 9,   text_color = NULL,   text_background_color = NULL,   text_justification = \"c\",   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_indent_reference = \"table\",   text_space = 1,   text_space_before = 15,   text_space_after = 15,   text_convert = TRUE,   as_table = FALSE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Data Source Attributes to the Table — rtf_source","text":"tbl data frame. source character string. border_left Left border type. vary left border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_right Right border type. vary right border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_top Top border type. vary top border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). first row table page, top border set \"double\" otherwise border set \"single\". possible input can found r2rtf:::border_type()$name. border_bottom Bottom border type. vary bottom border column, use character vector length vector equal number columns displayed e.g. c(\"single\",\"single\",\"single\"). possible input can found r2rtf:::border_type()$name. border_color_left Left border color type. Default NULL black. vary left border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_right Right border color type. Default NULL black. vary right border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_top Top border color type. Default NULL black. vary top border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_color_bottom Bottom border color type. Default NULL black. vary bottom border color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). border_width Border width twips. Default 15 0.0104 inch. cell_height Cell height inches. Default 0.15 0.15 inch. cell_justification Justification type cell. possible input can found r2rtf:::justification()$type. cell_vertical_justification Vertical justification type cell. possible input can found r2rtf:::vertical_justification()$type. cell_nrow Number rows required cell. text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_indent_reference reference start point text indent. Accept table page_margin text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_convert logical value convert special characters. as_table logical value display table.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Data Source Attributes to the Table — rtf_source","text":"data frame tbl additional attributes data source table","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_source.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add Data Source Attributes to the Table — rtf_source","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Data Source Attributes to the Table — rtf_source","text":"","code":"library(dplyr) # required to run examples data(r2rtf_tbl1) r2rtf_tbl1 %>%   rtf_source(\"Source: [study999:adam-adeff]\") %>%   attr(\"rtf_source\") #> [1] \"Source: [study999:adam-adeff]\" #> attr(,\"text_font\") #> [1] 1 #> attr(,\"text_font_size\") #> [1] 9 #> attr(,\"text_justification\") #> [1] \"c\" #> attr(,\"text_space\") #> [1] 1 #> attr(,\"text_space_before\") #> [1] 15 #> attr(,\"text_space_after\") #> [1] 15 #> attr(,\"text_indent_first\") #> [1] 0 #> attr(,\"text_indent_left\") #> [1] 0 #> attr(,\"text_indent_right\") #> [1] 0 #> attr(,\"text_new_page\") #> [1] FALSE #> attr(,\"text_hyphenation\") #> [1] TRUE #> attr(,\"text_convert\") #> [1] TRUE #> attr(,\"use_i18n\") #> [1] FALSE #> attr(,\"strwidth\") #> [1] 1.544922 #> attr(,\"use_color\") #> [1] FALSE #> attr(,\"class\") #> [1] \"character\" \"rtf_text\"  #> attr(,\"as_table\") #> [1] FALSE #> attr(,\"col_rel_width\") #> [1] 1"},{"path":"https://merck.github.io/r2rtf/reference/rtf_subline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Subline Attributes to Table — rtf_subline","title":"Add Subline Attributes to Table — rtf_subline","text":"Add subline attributes object","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_subline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Subline Attributes to Table — rtf_subline","text":"","code":"rtf_subline(   tbl,   text,   text_font = 1,   text_format = NULL,   text_font_size = 12,   text_color = NULL,   text_background_color = NULL,   text_justification = \"l\",   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_indent_reference = \"table\",   text_space = 1,   text_space_before = 180,   text_space_after = 180,   text_hyphenation = TRUE,   text_convert = TRUE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_subline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Subline Attributes to Table — rtf_subline","text":"tbl data frame. text character vector subline text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_indent_reference reference start point text indent. Accept table page_margin text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_hyphenation logical value control whether display text linked hyphenation. text_convert logical value convert special characters.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_subline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Subline Attributes to Table — rtf_subline","text":"data frame tbl additional attributes table title","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_subline.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add Subline Attributes to Table — rtf_subline","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Title Attributes to Table — rtf_title","title":"Add Title Attributes to Table — rtf_title","text":"Add title, subtitle, attributes object","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Title Attributes to Table — rtf_title","text":"","code":"rtf_title(   tbl,   title = NULL,   subtitle = NULL,   text_font = 1,   text_format = NULL,   text_font_size = 12,   text_color = NULL,   text_background_color = NULL,   text_justification = \"c\",   text_indent_first = 0,   text_indent_left = 0,   text_indent_right = 0,   text_indent_reference = \"table\",   text_space = 1,   text_space_before = 180,   text_space_after = 180,   text_hyphenation = TRUE,   text_convert = TRUE )"},{"path":"https://merck.github.io/r2rtf/reference/rtf_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Title Attributes to Table — rtf_title","text":"tbl data frame. title Title character string. subtitle Subtitle character string. text_font Text font type. Default 1 Times New Roman. vary text font type column, use numeric vector length vector equal number columns displayed e.g. c(1,2,3).possible input can found r2rtf:::font_type()$type. text_format Text format type. Default NULL normal. Combination format type permitted input e.g. \"ub\" bold underlined text. vary text format column, use character vector length vector equal number columns displayed e.g. c(\"\",\"u\",\"ib\"). possible input can found r2rtf:::font_format()$type. text_font_size Text font size.  vary text font size column, use numeric vector length vector equal number columns displayed e.g. c(9,20,40). text_color Text color type. Default NULL black. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_background_color Text background color type. Default NULL white. vary text color column, use character vector length vector equal number columns displayed e.g. c(\"white\",\"red\",\"blue\"). possible input can found grDevices::colors(). text_justification Justification type text. Default \"c\" center justification. vary text justification column, use character vector length vector equal number columns displayed e.g. c(\"c\",\"l\",\"r\"). possible input can found r2rtf:::justification()$type. text_indent_first value text indent first line. unit twip. text_indent_left value text left indent. unit twip. text_indent_right value text right indent. unit twip. text_indent_reference reference start point text indent. Accept table page_margin text_space Line space paragraph twips. Default 0. text_space_before Line space paragraph twips. text_space_after Line space paragraph twips. text_hyphenation logical value control whether display text linked hyphenation. text_convert logical value convert special characters.","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Title Attributes to Table — rtf_title","text":"data frame tbl additional attributes table title","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_title.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Add Title Attributes to Table — rtf_title","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/rtf_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Title Attributes to Table — rtf_title","text":"","code":"library(dplyr) # required to run examples data(r2rtf_tbl1) r2rtf_tbl1 %>%   rtf_title(title = \"ANCOVA of Change from Baseline at Week 8\") %>%   attr(\"rtf_title\") #> [1] \"ANCOVA of Change from Baseline at Week 8\" #> attr(,\"text_font\") #> [1] 1 #> attr(,\"text_font_size\") #> [1] 12 #> attr(,\"text_justification\") #> [1] \"c\" #> attr(,\"text_space\") #> [1] 1 #> attr(,\"text_space_before\") #> [1] 180 #> attr(,\"text_space_after\") #> [1] 180 #> attr(,\"text_indent_first\") #> [1] 0 #> attr(,\"text_indent_left\") #> [1] 0 #> attr(,\"text_indent_right\") #> [1] 0 #> attr(,\"text_new_page\") #> [1] FALSE #> attr(,\"text_hyphenation\") #> [1] TRUE #> attr(,\"text_convert\") #> [1] TRUE #> attr(,\"use_i18n\") #> [1] FALSE #> attr(,\"strwidth\") #> [1] 3.07921 #> attr(,\"use_color\") #> [1] FALSE #> attr(,\"class\") #> [1] \"character\" \"rtf_text\""},{"path":"https://merck.github.io/r2rtf/reference/utf8Tortf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a UTF-8 Encoded Character String to a RTF Encoded String — utf8Tortf","title":"Convert a UTF-8 Encoded Character String to a RTF Encoded String — utf8Tortf","text":"Convert UTF-8 Encoded Character String RTF Encoded String","code":""},{"path":"https://merck.github.io/r2rtf/reference/utf8Tortf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a UTF-8 Encoded Character String to a RTF Encoded String — utf8Tortf","text":"","code":"utf8Tortf(text)"},{"path":"https://merck.github.io/r2rtf/reference/utf8Tortf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a UTF-8 Encoded Character String to a RTF Encoded String — utf8Tortf","text":"text string converted. unicode character less 128 (including character keyboard), character . unicode character larger equal 128, character encoded.","code":""},{"path":"https://merck.github.io/r2rtf/reference/utf8Tortf.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Convert a UTF-8 Encoded Character String to a RTF Encoded String — utf8Tortf","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/reference/utf8Tortf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert a UTF-8 Encoded Character String to a RTF Encoded String — utf8Tortf","text":"Burke, S. M. (2003). RTF Pocket Guide. \" O'Reilly Media, Inc.\".","code":""},{"path":"https://merck.github.io/r2rtf/reference/write_rtf.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an RTF Table or Figure to an RTF File — write_rtf","title":"Write an RTF Table or Figure to an RTF File — write_rtf","text":"write_rtf function writes rtf encoding string .rtf file","code":""},{"path":"https://merck.github.io/r2rtf/reference/write_rtf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an RTF Table or Figure to an RTF File — write_rtf","text":"","code":"write_rtf(rtf, file)"},{"path":"https://merck.github.io/r2rtf/reference/write_rtf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an RTF Table or Figure to an RTF File — write_rtf","text":"rtf character rtf encoding string rendered rtf_encode(). file character string naming file save rtf file.","code":""},{"path":"https://merck.github.io/r2rtf/reference/write_rtf.html","id":"specification","dir":"Reference","previous_headings":"","what":"Specification","title":"Write an RTF Table or Figure to an RTF File — write_rtf","text":"contents section shown PDF user manual .","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-114","dir":"Changelog","previous_headings":"","what":"r2rtf 1.1.4","title":"r2rtf 1.1.4","text":"CRAN release: 2025-03-11","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-1-1-4","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 1.1.4","text":"Support setting text color properly encoding figures RTF (@elong0527, #252).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-1-1-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 1.1.4","text":"Safeguard code examples tests rare situation officer miss underlying dependency systemfonts (@nanxstats, #249).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-113","dir":"Changelog","previous_headings":"","what":"r2rtf 1.1.3","title":"r2rtf 1.1.3","text":"CRAN release: 2025-02-28","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-1-1-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 1.1.3","text":"Fix unlist() usage as_rtf_footnote() result errors downstream code R >= 4.5.0 (@nanxstats, #245).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-112","dir":"Changelog","previous_headings":"","what":"r2rtf 1.1.2","title":"r2rtf 1.1.2","text":"CRAN release: 2025-02-21","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-1-1-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 1.1.2","text":"Fine-tune symbol ANSI Unicode converter faster, safer, robust conversion (thanks, @yihui, #217). Use code generate Unicode/LaTeX mapping table, replace previous R/sysdata.rda solution. Now mapping table directly accessible via r2rtf:::unicode_latex (thanks, @yihui, #218).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-111","dir":"Changelog","previous_headings":"","what":"r2rtf 1.1.1","title":"r2rtf 1.1.1","text":"CRAN release: 2023-10-25","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 1.1.1","text":"Fix bug converting UTF-8 code >= 128 (#194).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-1-1-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 1.1.1","text":"Add LibreOffice 7.6 support improve error messages style (#198). Update .docx .html artifacts vignettes/ (#206).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-110","dir":"Changelog","previous_headings":"","what":"r2rtf 1.1.0","title":"r2rtf 1.1.0","text":"CRAN release: 2023-07-10","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"r2rtf 1.1.0","text":"Add r2rtf_ric_text() allow inline formatting (#184).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-1-1-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 1.1.0","text":"Use native pipe unit testing (#179).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-104","dir":"Changelog","previous_headings":"","what":"r2rtf 1.0.4","title":"r2rtf 1.0.4","text":"CRAN release: 2023-06-18","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-1-0-4","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 1.0.4","text":"Page size first page different pages (#174).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-103","dir":"Changelog","previous_headings":"","what":"r2rtf 1.0.3","title":"r2rtf 1.0.3","text":"CRAN release: 2023-05-26","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-1-0-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 1.0.3","text":"Properly display cell height HTML output (#66). Fix issue group_by page_by used together (#168).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-102","dir":"Changelog","previous_headings":"","what":"r2rtf 1.0.2","title":"r2rtf 1.0.2","text":"CRAN release: 2023-05-01","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-1-0-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 1.0.2","text":"Display proper indentation footnote data source (#141). Fix issue column contains missing value (#146).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-1-0-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 1.0.2","text":"Improve grammar style main vignette (@howardbaek, #144). Add LibreOffice 7.4 7.5 support (#156). Add citation details (#155).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-101","dir":"Changelog","previous_headings":"","what":"r2rtf 1.0.1","title":"r2rtf 1.0.1","text":"CRAN release: 2023-02-01","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"new-features-1-0-1","dir":"Changelog","previous_headings":"","what":"New features","title":"r2rtf 1.0.1","text":"Enable vertical alignment (#136).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-1-0-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 1.0.1","text":"Add support LibreOffice 7.3 (#92).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-100","dir":"Changelog","previous_headings":"","what":"r2rtf 1.0.0","title":"r2rtf 1.0.0","text":"CRAN release: 2023-01-12","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"r2rtf 1.0.0","text":"Add new functions: assemble_docx() assemble_rtf().","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 1.0.0","text":"rtf_encode() fails data contains NA fixed-width font used (#118). Avoid error cell_nrow = 1 (#108, #109).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 1.0.0","text":"Update copyright text.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-035","dir":"Changelog","previous_headings":"","what":"r2rtf 0.3.5","title":"r2rtf 0.3.5","text":"CRAN release: 2022-05-17","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-0-3-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 0.3.5","text":"Avoid warning messages matrix dimension R >= 4.2.0 (#101). Vectorized text justification rtf_title(), rtf_footnote(), functions (#98).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-034","dir":"Changelog","previous_headings":"","what":"r2rtf 0.3.4","title":"r2rtf 0.3.4","text":"CRAN release: 2022-04-08","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-0-3-4","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 0.3.4","text":"utf8Tortf() provides additional “-”.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-0-3-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 0.3.4","text":"Update maintainer email.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-033","dir":"Changelog","previous_headings":"","what":"r2rtf 0.3.3","title":"r2rtf 0.3.3","text":"CRAN release: 2022-03-07","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-0-3-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 0.3.3","text":"rtf_page() now new argument use_color.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-0-3-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 0.3.3","text":"Convert proper RTF code. rft_encode() add footnote source pages doc_type = \"figure\" (#90).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-032","dir":"Changelog","previous_headings":"","what":"r2rtf 0.3.2","title":"r2rtf 0.3.2","text":"CRAN release: 2021-12-07","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"new-features-0-3-2","dir":"Changelog","previous_headings":"","what":"New features","title":"r2rtf 0.3.2","text":"new function rtf_read_figure() supports jpeg emf formats reading figures (#65).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 0.3.2","text":"Avoid using .vector data.frame (#74). Proper alignment transfer html (#61).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-0-3-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 0.3.2","text":"Avoid specific LibreOffice version (#68).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-031","dir":"Changelog","previous_headings":"","what":"r2rtf 0.3.1","title":"r2rtf 0.3.1","text":"CRAN release: 2021-09-09","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"r2rtf 0.3.1","text":"New argument cell_vertical_alignment rtf_*() functions (#49, #52). New argument verbose rtf_encode_list() rtf_encode_table() (#38).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 0.3.1","text":"unicode_latex found (#50). Vertical align column headers (#49, #52). Vectorize text formatting arguments rtf_page_header() rtf_page_footer() (#47, #53). text_format issue value equal \"\" (#40). r2rtf needs work properly group_by() (#36).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-030","dir":"Changelog","previous_headings":"","what":"r2rtf 0.3.0","title":"r2rtf 0.3.0","text":"CRAN release: 2021-06-01","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"r2rtf 0.3.0","text":"New experimental internal function rtf_convert_format(). New argument pageby_row rtf_body() display first row instead page_by variable pageby_row = \"first_row\". New argument subline_by rtf_body display subline variable. New argument text_indent_reference allow user control reference indent page margin table border (#12). New internal function rtf_subset() subset RTF table object.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"r2rtf 0.3.0","text":"group_by can used page_by = NULL. page_by sort format style rtf_body(). Ensure consistent font size blank cell (#14).","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 0.3.0","text":"Rename datasets prefix r2rtf_ avoid conflicts namespaces. Enable special place holder \"-----\" page_by variable suppress line displayed page_by variable. See example 2 vignettes/example-pageby-groupby.Rmd.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-020","dir":"Changelog","previous_headings":"","what":"r2rtf 0.2.0","title":"r2rtf 0.2.0","text":"CRAN release: 2020-12-04","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"r2rtf 0.2.0","text":"Add rtf_subline(), rtf_page_header(), rtf_page_footer(). Add rtf_page() set page related attributes. Introduce argument text_convert allow fixed string. Add argument as_table rtf_footnote() rtf_source() allow footnote data source inside outside table. Refactor pageby feature enable group_by feature. Add vignettes/example-pageby.Rmd illustrate new pageby features. Define obj_rtf_border obj_rtf_text objects standardize border text attributes.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"r2rtf 0.2.0","text":"Add example ADaM datasets. Add validation tracker inst/ test cases tests/.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-011","dir":"Changelog","previous_headings":"","what":"r2rtf 0.1.1","title":"r2rtf 0.1.1","text":"CRAN release: 2020-04-03 Standardize input gt_tbl tbl. Resolve UTF-8 encoding.","code":""},{"path":"https://merck.github.io/r2rtf/news/index.html","id":"r2rtf-010-unpublished","dir":"Changelog","previous_headings":"","what":"r2rtf 0.1.0 (Unpublished)","title":"r2rtf 0.1.0 (Unpublished)","text":"Added NEWS.md file track changes package. Initial version.","code":""}]
